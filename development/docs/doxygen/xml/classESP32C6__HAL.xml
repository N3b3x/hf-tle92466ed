<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="classESP32C6__HAL" kind="class" language="C++" prot="public">
    <compoundname>ESP32C6_HAL</compoundname>
    <basecompoundref prot="public" virt="non-virtual">TLE92466ED_HAL</basecompoundref>
    <includes refid="ESP32C6__HAL_8hpp" local="no">ESP32C6_HAL.hpp</includes>
    <innerclass refid="structESP32C6__HAL_1_1SPIConfig" prot="public">ESP32C6_HAL::SPIConfig</innerclass>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classESP32C6__HAL_1ad5036139d8a26dd2dedc3eed1a577412" prot="private" static="no" mutable="no">
        <type><ref refid="structESP32C6__HAL_1_1SPIConfig" kindref="compound">SPIConfig</ref></type>
        <definition>SPIConfig ESP32C6_HAL::config_</definition>
        <argsstring></argsstring>
        <name>config_</name>
        <qualifiedname>ESP32C6_HAL::config_</qualifiedname>
        <briefdescription>
<para>SPI configuration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/ESP32C6_HAL.hpp" line="97" column="15" bodyfile="examples/esp32/main/ESP32C6_HAL.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classESP32C6__HAL_1ad569482ba36173090bdc67b2bea55ef2" prot="private" static="no" mutable="no">
        <type>spi_device_handle_t</type>
        <definition>spi_device_handle_t ESP32C6_HAL::spi_device_</definition>
        <argsstring></argsstring>
        <name>spi_device_</name>
        <qualifiedname>ESP32C6_HAL::spi_device_</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
<para>SPI device handle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/ESP32C6_HAL.hpp" line="98" column="25" bodyfile="examples/esp32/main/ESP32C6_HAL.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classESP32C6__HAL_1a3b0a1ae6dd53fe8845d459294721b2cf" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ESP32C6_HAL::initialized_</definition>
        <argsstring></argsstring>
        <name>initialized_</name>
        <qualifiedname>ESP32C6_HAL::initialized_</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
<para>Initialization state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/ESP32C6_HAL.hpp" line="99" column="10" bodyfile="examples/esp32/main/ESP32C6_HAL.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classESP32C6__HAL_1a13db8464f6299214182276d334d0ad3b" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const char *</type>
        <definition>constexpr const char* ESP32C6_HAL::TAG</definition>
        <argsstring></argsstring>
        <name>TAG</name>
        <qualifiedname>ESP32C6_HAL::TAG</qualifiedname>
        <initializer>= &quot;ESP32C6_HAL&quot;</initializer>
        <briefdescription>
<para>Logging tag. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/ESP32C6_HAL.hpp" line="101" column="33" bodyfile="examples/esp32/main/ESP32C6_HAL.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classESP32C6__HAL_1aeea7988bfd0b77e22cf2b590d80e278f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ESP32C6_HAL::ESP32C6_HAL</definition>
        <argsstring>()</argsstring>
        <name>ESP32C6_HAL</name>
        <qualifiedname>ESP32C6_HAL::ESP32C6_HAL</qualifiedname>
        <briefdescription>
<para>Constructor with default SPI configuration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/ESP32C6_HAL.hpp" line="49" column="5" bodyfile="examples/esp32/main/ESP32C6_HAL.hpp" bodystart="49" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classESP32C6__HAL_1a145b7a932ac85fb8873818ea98028e65" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>ESP32C6_HAL::ESP32C6_HAL</definition>
        <argsstring>(const SPIConfig &amp;config)</argsstring>
        <name>ESP32C6_HAL</name>
        <qualifiedname>ESP32C6_HAL::ESP32C6_HAL</qualifiedname>
        <param>
          <type>const <ref refid="structESP32C6__HAL_1_1SPIConfig" kindref="compound">SPIConfig</ref> &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Constructor with custom SPI configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>SPI configuration parameters </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/ESP32C6_HAL.hpp" line="55" column="14" bodyfile="examples/esp32/main/ESP32C6_HAL.cpp" bodystart="14" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classESP32C6__HAL_1a28c36989ea9876b55557d7d868970023" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ESP32C6_HAL::~ESP32C6_HAL</definition>
        <argsstring>() override</argsstring>
        <name>~ESP32C6_HAL</name>
        <qualifiedname>ESP32C6_HAL::~ESP32C6_HAL</qualifiedname>
        <briefdescription>
<para>Destructor - cleans up SPI resources. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/ESP32C6_HAL.hpp" line="60" column="5" bodyfile="examples/esp32/main/ESP32C6_HAL.cpp" bodystart="25" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classESP32C6__HAL_1a567911602548f9007c467c90d5fd148e" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto ESP32C6_HAL::initialize</definition>
        <argsstring>() noexcept -&gt; std::expected&lt; void, HALError &gt;</argsstring>
        <name>initialize</name>
        <qualifiedname>ESP32C6_HAL::initialize</qualifiedname>
        <briefdescription>
<para>Initialize the HAL (must be called before use) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>std::expected&lt;void, HALError&gt; Success or error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/ESP32C6_HAL.hpp" line="66" column="10" bodyfile="examples/esp32/main/ESP32C6_HAL.cpp" bodystart="39" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classESP32C6__HAL_1ae0fdf849a174a71a44046f13faa75fe9" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto ESP32C6_HAL::spiTransfer</definition>
        <argsstring>(std::span&lt; const uint8_t &gt; txData, std::span&lt; uint8_t &gt; rxData) noexcept -&gt; std::expected&lt; void, HALError &gt; override</argsstring>
        <name>spiTransfer</name>
        <qualifiedname>ESP32C6_HAL::spiTransfer</qualifiedname>
        <param>
          <type>std::span&lt; const uint8_t &gt;</type>
          <declname>txData</declname>
        </param>
        <param>
          <type>std::span&lt; uint8_t &gt;</type>
          <declname>rxData</declname>
        </param>
        <briefdescription>
<para>Perform SPI transfer (32-bit frames for <ref refid="namespaceTLE92466ED" kindref="compound">TLE92466ED</ref>) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>txData</parametername>
</parameternamelist>
<parameterdescription>
<para>Transmit data buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rxData</parametername>
</parameternamelist>
<parameterdescription>
<para>Receive data buffer <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::expected&lt;void, HALError&gt; Success or error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/ESP32C6_HAL.hpp" line="74" column="10" bodyfile="examples/esp32/main/ESP32C6_HAL.cpp" bodystart="121" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classESP32C6__HAL_1a414805eae19d37e4507602f2d3754a78" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ESP32C6_HAL::delayMicroseconds</definition>
        <argsstring>(uint32_t us) noexcept override</argsstring>
        <name>delayMicroseconds</name>
        <qualifiedname>ESP32C6_HAL::delayMicroseconds</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>us</declname>
        </param>
        <briefdescription>
<para>Microsecond delay implementation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>us</parametername>
</parameternamelist>
<parameterdescription>
<para>Delay in microseconds </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/ESP32C6_HAL.hpp" line="82" column="10" bodyfile="examples/esp32/main/ESP32C6_HAL.cpp" bodystart="155" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classESP32C6__HAL_1a053c2a667c59846f094a7a220f056a41" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto ESP32C6_HAL::getConfig</definition>
        <argsstring>() const noexcept -&gt; const SPIConfig &amp;</argsstring>
        <name>getConfig</name>
        <qualifiedname>ESP32C6_HAL::getConfig</qualifiedname>
        <briefdescription>
<para>Get the current SPI configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Current SPI configuration </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/ESP32C6_HAL.hpp" line="88" column="10" bodyfile="examples/esp32/main/ESP32C6_HAL.hpp" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classESP32C6__HAL_1a78d464168fcb8326b05282500c38463d" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto ESP32C6_HAL::isInitialized</definition>
        <argsstring>() const noexcept -&gt; bool</argsstring>
        <name>isInitialized</name>
        <qualifiedname>ESP32C6_HAL::isInitialized</qualifiedname>
        <briefdescription>
<para>Check if HAL is initialized. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if initialized, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/ESP32C6_HAL.hpp" line="94" column="10" bodyfile="examples/esp32/main/ESP32C6_HAL.hpp" bodystart="94" bodyend="94"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classESP32C6__HAL_1ae9c210e3f20562c5987d8d23a00ae778" prot="private" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto ESP32C6_HAL::initializeSPI</definition>
        <argsstring>() noexcept -&gt; std::expected&lt; void, HALError &gt;</argsstring>
        <name>initializeSPI</name>
        <qualifiedname>ESP32C6_HAL::initializeSPI</qualifiedname>
        <briefdescription>
<para>Initialize SPI bus. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>std::expected&lt;void, HALError&gt; Success or error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/ESP32C6_HAL.hpp" line="107" column="10" bodyfile="examples/esp32/main/ESP32C6_HAL.cpp" bodystart="65" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classESP32C6__HAL_1a180bafd20ce81bfc55023ace5cd40497" prot="private" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto ESP32C6_HAL::addSPIDevice</definition>
        <argsstring>() noexcept -&gt; std::expected&lt; void, HALError &gt;</argsstring>
        <name>addSPIDevice</name>
        <qualifiedname>ESP32C6_HAL::addSPIDevice</qualifiedname>
        <briefdescription>
<para>Add SPI device to the bus. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>std::expected&lt;void, HALError&gt; Success or error <linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/ESP32C6_HAL.hpp" line="113" column="10" bodyfile="examples/esp32/main/ESP32C6_HAL.cpp" bodystart="92" bodyend="119"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>ESP32-C6 implementation of the <ref refid="namespaceTLE92466ED" kindref="compound">TLE92466ED</ref> HAL interface. </para>
    </briefdescription>
    <detaileddescription>
<para>This class provides the platform-specific implementation for ESP32-C6, handling SPI communication with proper timing and error handling. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>ESP32C6_HAL</label>
        <link refid="classESP32C6__HAL"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>TLE92466ED_HAL</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>ESP32C6_HAL</label>
        <link refid="classESP32C6__HAL"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>config_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>ESP32C6_HAL::SPIConfig</label>
        <link refid="structESP32C6__HAL_1_1SPIConfig"/>
      </node>
      <node id="2">
        <label>TLE92466ED_HAL</label>
      </node>
    </collaborationgraph>
    <location file="examples/esp32/main/ESP32C6_HAL.hpp" line="30" column="1" bodyfile="examples/esp32/main/ESP32C6_HAL.hpp" bodystart="30" bodyend="114"/>
    <listofallmembers>
      <member refid="classESP32C6__HAL_1a180bafd20ce81bfc55023ace5cd40497" prot="private" virt="non-virtual"><scope>ESP32C6_HAL</scope><name>addSPIDevice</name></member>
      <member refid="classESP32C6__HAL_1ad5036139d8a26dd2dedc3eed1a577412" prot="private" virt="non-virtual"><scope>ESP32C6_HAL</scope><name>config_</name></member>
      <member refid="classESP32C6__HAL_1a414805eae19d37e4507602f2d3754a78" prot="public" virt="non-virtual"><scope>ESP32C6_HAL</scope><name>delayMicroseconds</name></member>
      <member refid="classESP32C6__HAL_1aeea7988bfd0b77e22cf2b590d80e278f" prot="public" virt="non-virtual"><scope>ESP32C6_HAL</scope><name>ESP32C6_HAL</name></member>
      <member refid="classESP32C6__HAL_1a145b7a932ac85fb8873818ea98028e65" prot="public" virt="non-virtual"><scope>ESP32C6_HAL</scope><name>ESP32C6_HAL</name></member>
      <member refid="classESP32C6__HAL_1a053c2a667c59846f094a7a220f056a41" prot="public" virt="non-virtual"><scope>ESP32C6_HAL</scope><name>getConfig</name></member>
      <member refid="classESP32C6__HAL_1a567911602548f9007c467c90d5fd148e" prot="public" virt="non-virtual"><scope>ESP32C6_HAL</scope><name>initialize</name></member>
      <member refid="classESP32C6__HAL_1a3b0a1ae6dd53fe8845d459294721b2cf" prot="private" virt="non-virtual"><scope>ESP32C6_HAL</scope><name>initialized_</name></member>
      <member refid="classESP32C6__HAL_1ae9c210e3f20562c5987d8d23a00ae778" prot="private" virt="non-virtual"><scope>ESP32C6_HAL</scope><name>initializeSPI</name></member>
      <member refid="classESP32C6__HAL_1a78d464168fcb8326b05282500c38463d" prot="public" virt="non-virtual"><scope>ESP32C6_HAL</scope><name>isInitialized</name></member>
      <member refid="classESP32C6__HAL_1ad569482ba36173090bdc67b2bea55ef2" prot="private" virt="non-virtual"><scope>ESP32C6_HAL</scope><name>spi_device_</name></member>
      <member refid="classESP32C6__HAL_1ae0fdf849a174a71a44046f13faa75fe9" prot="public" virt="non-virtual"><scope>ESP32C6_HAL</scope><name>spiTransfer</name></member>
      <member refid="classESP32C6__HAL_1a13db8464f6299214182276d334d0ad3b" prot="private" virt="non-virtual"><scope>ESP32C6_HAL</scope><name>TAG</name></member>
      <member refid="classESP32C6__HAL_1a28c36989ea9876b55557d7d868970023" prot="public" virt="non-virtual"><scope>ESP32C6_HAL</scope><name>~ESP32C6_HAL</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
