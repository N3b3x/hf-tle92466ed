<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="classArduino__HAL" kind="class" language="C++" prot="public">
    <compoundname>Arduino_HAL</compoundname>
    <basecompoundref prot="public" virt="non-virtual">TLE92466ED_HAL</basecompoundref>
    <includes refid="Arduino__HAL_8hpp" local="no">Arduino_HAL.hpp</includes>
    <innerclass refid="structArduino__HAL_1_1SPIConfig" prot="public">Arduino_HAL::SPIConfig</innerclass>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classArduino__HAL_1a428e17cab20dd81c769399a23bc4a1ad" prot="private" static="no" mutable="no">
        <type><ref refid="structArduino__HAL_1_1SPIConfig" kindref="compound">SPIConfig</ref></type>
        <definition>SPIConfig Arduino_HAL::m_config</definition>
        <argsstring></argsstring>
        <name>m_config</name>
        <qualifiedname>Arduino_HAL::m_config</qualifiedname>
        <briefdescription>
<para>SPI configuration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/arduino/Arduino_HAL.hpp" line="221" column="15" bodyfile="examples/arduino/Arduino_HAL.hpp" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classArduino__HAL_1aadf746353286d023834466470087e5ae" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Arduino_HAL::m_initialized</definition>
        <argsstring></argsstring>
        <name>m_initialized</name>
        <qualifiedname>Arduino_HAL::m_initialized</qualifiedname>
        <briefdescription>
<para>Initialization state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/arduino/Arduino_HAL.hpp" line="222" column="10" bodyfile="examples/arduino/Arduino_HAL.hpp" bodystart="222" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classArduino__HAL_1a64666a4a102a984c51ec04d587101e3b" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Arduino_HAL::Arduino_HAL</definition>
        <argsstring>(const SPIConfig &amp;config=SPIConfig())</argsstring>
        <name>Arduino_HAL</name>
        <qualifiedname>Arduino_HAL::Arduino_HAL</qualifiedname>
        <param>
          <type>const <ref refid="structArduino__HAL_1_1SPIConfig" kindref="compound">SPIConfig</ref> &amp;</type>
          <declname>config</declname>
          <defval><ref refid="structArduino__HAL_1_1SPIConfig" kindref="compound">SPIConfig</ref>()</defval>
        </param>
        <briefdescription>
<para>Construct Arduino HAL with configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>SPI configuration </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/arduino/Arduino_HAL.hpp" line="64" column="14" bodyfile="examples/arduino/Arduino_HAL.hpp" bodystart="64" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classArduino__HAL_1a003e7ec514421e325234ba32af378505" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Arduino_HAL::~Arduino_HAL</definition>
        <argsstring>() override</argsstring>
        <name>~Arduino_HAL</name>
        <qualifiedname>Arduino_HAL::~Arduino_HAL</qualifiedname>
        <briefdescription>
<para>Destructor - cleanup resources. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/arduino/Arduino_HAL.hpp" line="74" column="5" bodyfile="examples/arduino/Arduino_HAL.hpp" bodystart="74" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classArduino__HAL_1afc441d28da42aef29a55907a319086a5" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Arduino_HAL::initialize</definition>
        <argsstring>() noexcept -&gt; std::expected&lt; void, TLE92466ED_Error &gt; override</argsstring>
        <name>initialize</name>
        <qualifiedname>Arduino_HAL::initialize</qualifiedname>
        <briefdescription>
<para>Initialize the Arduino HAL. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Success or error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/arduino/Arduino_HAL.hpp" line="89" column="10" bodyfile="examples/arduino/Arduino_HAL.hpp" bodystart="89" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classArduino__HAL_1a8dc961af6345a9355ac7f288ba97194a" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Arduino_HAL::spiTransfer</definition>
        <argsstring>(uint32_t tx_data) noexcept -&gt; std::expected&lt; uint32_t, TLE92466ED_Error &gt; override</argsstring>
        <name>spiTransfer</name>
        <qualifiedname>Arduino_HAL::spiTransfer</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>tx_data</declname>
        </param>
        <briefdescription>
<para>Transfer 32-bit SPI frame to/from <ref refid="namespaceTLE92466ED" kindref="compound">TLE92466ED</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tx_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to transmit (32 bits) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Received data (32 bits) or error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/arduino/Arduino_HAL.hpp" line="129" column="10" bodyfile="examples/arduino/Arduino_HAL.hpp" bodystart="129" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classArduino__HAL_1ad4454000b5545ee13fd4e0827f7fd020" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Arduino_HAL::delayMicroseconds</definition>
        <argsstring>(uint32_t microseconds) noexcept -&gt; void override</argsstring>
        <name>delayMicroseconds</name>
        <qualifiedname>Arduino_HAL::delayMicroseconds</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>microseconds</declname>
        </param>
        <briefdescription>
<para>Delay for specified microseconds. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>microseconds</parametername>
</parameternamelist>
<parameterdescription>
<para>Delay duration in microseconds </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/arduino/Arduino_HAL.hpp" line="170" column="10" bodyfile="examples/arduino/Arduino_HAL.hpp" bodystart="170" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classArduino__HAL_1aa867c51a61820644bd4ea914e95db08d" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Arduino_HAL::isInitialized</definition>
        <argsstring>() const noexcept -&gt; bool</argsstring>
        <name>isInitialized</name>
        <qualifiedname>Arduino_HAL::isInitialized</qualifiedname>
        <briefdescription>
<para>Check if HAL is initialized. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if initialized </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/arduino/Arduino_HAL.hpp" line="178" column="10" bodyfile="examples/arduino/Arduino_HAL.hpp" bodystart="178" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classArduino__HAL_1af4fdc46e21a752b20f742bbfc08b1e81" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Arduino_HAL::getConfig</definition>
        <argsstring>() const noexcept -&gt; const SPIConfig &amp;</argsstring>
        <name>getConfig</name>
        <qualifiedname>Arduino_HAL::getConfig</qualifiedname>
        <briefdescription>
<para>Get current SPI configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Reference to SPI configuration </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/arduino/Arduino_HAL.hpp" line="186" column="10" bodyfile="examples/arduino/Arduino_HAL.hpp" bodystart="186" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classArduino__HAL_1a0d6cb789947835469c5f5c785f7dd8e9" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Arduino_HAL::enableDevice</definition>
        <argsstring>() noexcept -&gt; void</argsstring>
        <name>enableDevice</name>
        <qualifiedname>Arduino_HAL::enableDevice</qualifiedname>
        <briefdescription>
<para>Enable the <ref refid="namespaceTLE92466ED" kindref="compound">TLE92466ED</ref> device (if EN pin is configured) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/arduino/Arduino_HAL.hpp" line="193" column="10" bodyfile="examples/arduino/Arduino_HAL.hpp" bodystart="193" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classArduino__HAL_1abf13cadba52f978f5b615f9cd60c3ea0" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Arduino_HAL::disableDevice</definition>
        <argsstring>() noexcept -&gt; void</argsstring>
        <name>disableDevice</name>
        <qualifiedname>Arduino_HAL::disableDevice</qualifiedname>
        <briefdescription>
<para>Disable the <ref refid="namespaceTLE92466ED" kindref="compound">TLE92466ED</ref> device (if EN pin is configured) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/arduino/Arduino_HAL.hpp" line="202" column="10" bodyfile="examples/arduino/Arduino_HAL.hpp" bodystart="202" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classArduino__HAL_1a71d3e0beaae96edb13ca2bb88d47b4e3" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Arduino_HAL::resetDevice</definition>
        <argsstring>() noexcept -&gt; void</argsstring>
        <name>resetDevice</name>
        <qualifiedname>Arduino_HAL::resetDevice</qualifiedname>
        <briefdescription>
<para>Reset the <ref refid="namespaceTLE92466ED" kindref="compound">TLE92466ED</ref> device (if RESN pin is configured) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/arduino/Arduino_HAL.hpp" line="211" column="10" bodyfile="examples/arduino/Arduino_HAL.hpp" bodystart="211" bodyend="218"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Arduino implementation of <ref refid="namespaceTLE92466ED" kindref="compound">TLE92466ED</ref> HAL interface. </para>
    </briefdescription>
    <detaileddescription>
<para>This class provides SPI communication and timing functions for Arduino platforms. It uses the standard Arduino SPI library and is compatible with most Arduino boards. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Arduino_HAL</label>
        <link refid="classArduino__HAL"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>TLE92466ED_HAL</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Arduino_HAL</label>
        <link refid="classArduino__HAL"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>m_config</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>Arduino_HAL::SPIConfig</label>
        <link refid="structArduino__HAL_1_1SPIConfig"/>
      </node>
      <node id="2">
        <label>TLE92466ED_HAL</label>
      </node>
    </collaborationgraph>
    <location file="examples/arduino/Arduino_HAL.hpp" line="45" column="1" bodyfile="examples/arduino/Arduino_HAL.hpp" bodystart="45" bodyend="223"/>
    <listofallmembers>
      <member refid="classArduino__HAL_1a64666a4a102a984c51ec04d587101e3b" prot="public" virt="non-virtual"><scope>Arduino_HAL</scope><name>Arduino_HAL</name></member>
      <member refid="classArduino__HAL_1ad4454000b5545ee13fd4e0827f7fd020" prot="public" virt="non-virtual"><scope>Arduino_HAL</scope><name>delayMicroseconds</name></member>
      <member refid="classArduino__HAL_1abf13cadba52f978f5b615f9cd60c3ea0" prot="public" virt="non-virtual"><scope>Arduino_HAL</scope><name>disableDevice</name></member>
      <member refid="classArduino__HAL_1a0d6cb789947835469c5f5c785f7dd8e9" prot="public" virt="non-virtual"><scope>Arduino_HAL</scope><name>enableDevice</name></member>
      <member refid="classArduino__HAL_1af4fdc46e21a752b20f742bbfc08b1e81" prot="public" virt="non-virtual"><scope>Arduino_HAL</scope><name>getConfig</name></member>
      <member refid="classArduino__HAL_1afc441d28da42aef29a55907a319086a5" prot="public" virt="non-virtual"><scope>Arduino_HAL</scope><name>initialize</name></member>
      <member refid="classArduino__HAL_1aa867c51a61820644bd4ea914e95db08d" prot="public" virt="non-virtual"><scope>Arduino_HAL</scope><name>isInitialized</name></member>
      <member refid="classArduino__HAL_1a428e17cab20dd81c769399a23bc4a1ad" prot="private" virt="non-virtual"><scope>Arduino_HAL</scope><name>m_config</name></member>
      <member refid="classArduino__HAL_1aadf746353286d023834466470087e5ae" prot="private" virt="non-virtual"><scope>Arduino_HAL</scope><name>m_initialized</name></member>
      <member refid="classArduino__HAL_1a71d3e0beaae96edb13ca2bb88d47b4e3" prot="public" virt="non-virtual"><scope>Arduino_HAL</scope><name>resetDevice</name></member>
      <member refid="classArduino__HAL_1a8dc961af6345a9355ac7f288ba97194a" prot="public" virt="non-virtual"><scope>Arduino_HAL</scope><name>spiTransfer</name></member>
      <member refid="classArduino__HAL_1a003e7ec514421e325234ba32af378505" prot="public" virt="non-virtual"><scope>Arduino_HAL</scope><name>~Arduino_HAL</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
