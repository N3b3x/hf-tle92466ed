<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="TLE92466ED__TestFramework_8hpp" kind="file" language="C++">
    <compoundname>TLE92466ED_TestFramework.hpp</compoundname>
    <includes local="yes">esp_log.h</includes>
    <includes local="yes">esp_timer.h</includes>
    <includes local="yes">freertos/FreeRTOS.h</includes>
    <includes local="yes">freertos/task.h</includes>
    <includes local="yes">freertos/semphr.h</includes>
    <includes local="yes">driver/gpio.h</includes>
    <includedby refid="BasicUsageExample_8cpp" local="yes">examples/esp32/main/BasicUsageExample.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>examples/esp32/main/TLE92466ED_TestFramework.hpp</label>
        <link refid="TLE92466ED__TestFramework_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>driver/gpio.h</label>
      </node>
      <node id="2">
        <label>esp_log.h</label>
      </node>
      <node id="3">
        <label>esp_timer.h</label>
      </node>
      <node id="4">
        <label>freertos/FreeRTOS.h</label>
      </node>
      <node id="6">
        <label>freertos/semphr.h</label>
      </node>
      <node id="5">
        <label>freertos/task.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>examples/esp32/main/BasicUsageExample.cpp</label>
        <link refid="BasicUsageExample_8cpp"/>
      </node>
      <node id="1">
        <label>examples/esp32/main/TLE92466ED_TestFramework.hpp</label>
        <link refid="TLE92466ED__TestFramework_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structTestResults" prot="public">TestResults</innerclass>
    <innerclass refid="structTestTaskContext" prot="public">TestTaskContext</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="TLE92466ED__TestFramework_8hpp_1a36936b10eceab520bb9d3d95534a00db" prot="public" static="no">
        <name>RUN_TEST</name>
        <param><defname>test_func</defname></param>
        <initializer>do { \
    <ref refid="TLE92466ED__TestFramework_8hpp_1a57a48f91a141d98e45f82937581e1a97" kindref="member">ensure_gpio14_initialized</ref>(); \
    ESP_LOGI(<ref refid="BasicUsageExample_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>, &quot;&quot;); \
    ESP_LOGI(<ref refid="BasicUsageExample_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>, &quot;╔══════════════════════════════════════════════════════════════════════════════╗&quot;); \
    ESP_LOGI(<ref refid="BasicUsageExample_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>, &quot;║ Running: &quot; #test_func &quot;                                                       &quot;); \
    ESP_LOGI(<ref refid="BasicUsageExample_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>, &quot;╚══════════════════════════════════════════════════════════════════════════════╝&quot;); \
    uint64_t start_time = esp_timer_get_time(); \
    bool result = test_func(); \
    uint64_t end_time = esp_timer_get_time(); \
    uint64_t execution_time = end_time - start_time; \
    g_test_results.add_result(result, execution_time); \
    if (result) { \
        ESP_LOGI(<ref refid="BasicUsageExample_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>, &quot;[SUCCESS] PASSED: &quot; #test_func &quot; (%.2f ms)&quot;, execution_time / 1000.0); \
    } else { \
        ESP_LOGE(<ref refid="BasicUsageExample_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>, &quot;[FAILED] FAILED: &quot; #test_func &quot; (%.2f ms)&quot;, execution_time / 1000.0); \
    } \
    <ref refid="TLE92466ED__TestFramework_8hpp_1a7bb80345e5681c19686df292fa897daf" kindref="member">flip_test_progress_indicator</ref>(); \
    vTaskDelay(pdMS_TO_TICKS(100)); \
} while (0)</initializer>
        <briefdescription>
<para>Run a test function inline (no separate task) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/TLE92466ED_TestFramework.hpp" line="170" column="9" bodyfile="examples/esp32/main/TLE92466ED_TestFramework.hpp" bodystart="170" bodyend="189"/>
      </memberdef>
      <memberdef kind="define" id="TLE92466ED__TestFramework_8hpp_1a214e38e25939e45e31ae73a073fca47f" prot="public" static="no">
        <name>RUN_TEST_IN_TASK</name>
        <param><defname>name</defname></param>
        <param><defname>func</defname></param>
        <param><defname>stack_size_bytes</defname></param>
        <param><defname>priority</defname></param>
        <briefdescription>
<para>Run a test in its own FreeRTOS task. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/TLE92466ED_TestFramework.hpp" line="234" column="9" bodyfile="examples/esp32/main/TLE92466ED_TestFramework.hpp" bodystart="234" bodyend="265"/>
      </memberdef>
      <memberdef kind="define" id="TLE92466ED__TestFramework_8hpp_1a474e37ca2ab214a02b4a2718aa8b4e5b" prot="public" static="no">
        <name>RUN_TEST_SECTION_IF_ENABLED</name>
        <param><defname>enabled</defname></param>
        <param><defname>section_name</defname></param>
        <param><defname>...</defname></param>
        <initializer>do { \
    if (enabled) { \
        ESP_LOGI(<ref refid="BasicUsageExample_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>, &quot;&quot;); \
        ESP_LOGI(<ref refid="BasicUsageExample_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>, &quot;╔══════════════════════════════════════════════════════════════════════════════╗&quot;); \
        ESP_LOGI(<ref refid="BasicUsageExample_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>, &quot;║ SECTION: %-69s║&quot;, section_name); \
        ESP_LOGI(<ref refid="BasicUsageExample_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>, &quot;╚══════════════════════════════════════════════════════════════════════════════╝&quot;); \
        <ref refid="TLE92466ED__TestFramework_8hpp_1a0b263a245b65a247ab95a28992b8cc4c" kindref="member">output_section_indicator</ref>(5); \
        __VA_ARGS__ \
    } \
} while (0)</initializer>
        <briefdescription>
<para>Run a test section with indicator pattern. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/TLE92466ED_TestFramework.hpp" line="270" column="9" bodyfile="examples/esp32/main/TLE92466ED_TestFramework.hpp" bodystart="270" bodyend="280"/>
      </memberdef>
      <memberdef kind="define" id="TLE92466ED__TestFramework_8hpp_1a67d0268939c5e2304d0d649bb1fc6d0b" prot="public" static="no">
        <name>RUN_TEST_SECTION_IF_ENABLED_WITH_PATTERN</name>
        <param><defname>enabled</defname></param>
        <param><defname>section_name</defname></param>
        <param><defname>blink_count</defname></param>
        <param><defname>...</defname></param>
        <initializer>do { \
    if (enabled) { \
        ESP_LOGI(<ref refid="BasicUsageExample_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>, &quot;&quot;); \
        ESP_LOGI(<ref refid="BasicUsageExample_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>, &quot;╔══════════════════════════════════════════════════════════════════════════════╗&quot;); \
        ESP_LOGI(<ref refid="BasicUsageExample_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>, &quot;║ SECTION: %-69s║&quot;, section_name); \
        ESP_LOGI(<ref refid="BasicUsageExample_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>, &quot;╚══════════════════════════════════════════════════════════════════════════════╝&quot;); \
        <ref refid="TLE92466ED__TestFramework_8hpp_1a0b263a245b65a247ab95a28992b8cc4c" kindref="member">output_section_indicator</ref>(blink_count); \
        __VA_ARGS__ \
    } \
} while (0)</initializer>
        <briefdescription>
<para>Run a test section with custom blink pattern. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/TLE92466ED_TestFramework.hpp" line="285" column="9" bodyfile="examples/esp32/main/TLE92466ED_TestFramework.hpp" bodystart="285" bodyend="295"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="TLE92466ED__TestFramework_8hpp_1a0897f1535fcbb73063a032f07550b12e" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr gpio_num_t</type>
        <definition>constexpr gpio_num_t TEST_PROGRESS_PIN</definition>
        <argsstring></argsstring>
        <name>TEST_PROGRESS_PIN</name>
        <initializer>= GPIO_NUM_14</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/TLE92466ED_TestFramework.hpp" line="32" column="29" bodyfile="examples/esp32/main/TLE92466ED_TestFramework.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="TLE92466ED__TestFramework_8hpp_1ae2244c7a6c3cf5cc171264032838bed1" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool g_gpio14_initialized</definition>
        <argsstring></argsstring>
        <name>g_gpio14_initialized</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/TLE92466ED_TestFramework.hpp" line="33" column="13" bodyfile="examples/esp32/main/TLE92466ED_TestFramework.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="TLE92466ED__TestFramework_8hpp_1a0f5de63264bd9a08624fa9d89b4248a2" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool g_gpio14_state</definition>
        <argsstring></argsstring>
        <name>g_gpio14_state</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/TLE92466ED_TestFramework.hpp" line="34" column="13" bodyfile="examples/esp32/main/TLE92466ED_TestFramework.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="TLE92466ED__TestFramework_8hpp_1aaff89257c54366921eebb8ec1348b1fd" prot="public" static="yes" mutable="no">
        <type><ref refid="structTestResults" kindref="compound">TestResults</ref></type>
        <definition>TestResults g_test_results</definition>
        <argsstring></argsstring>
        <name>g_test_results</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/TLE92466ED_TestFramework.hpp" line="161" column="20" bodyfile="examples/esp32/main/TLE92466ED_TestFramework.hpp" bodystart="161" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="TLE92466ED__TestFramework_8hpp_1a3967179ac699a5b02ef9787b549409fe" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool init_test_progress_indicator</definition>
        <argsstring>() noexcept</argsstring>
        <name>init_test_progress_indicator</name>
        <briefdescription>
<para>Initialize GPIO14 as test progression indicator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/TLE92466ED_TestFramework.hpp" line="39" column="13" bodyfile="examples/esp32/main/TLE92466ED_TestFramework.hpp" bodystart="39" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="TLE92466ED__TestFramework_8hpp_1a7bb80345e5681c19686df292fa897daf" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void flip_test_progress_indicator</definition>
        <argsstring>() noexcept</argsstring>
        <name>flip_test_progress_indicator</name>
        <briefdescription>
<para>Toggle GPIO14 to indicate test progression. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/TLE92466ED_TestFramework.hpp" line="65" column="13" bodyfile="examples/esp32/main/TLE92466ED_TestFramework.hpp" bodystart="65" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="TLE92466ED__TestFramework_8hpp_1a0b263a245b65a247ab95a28992b8cc4c" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void output_section_indicator</definition>
        <argsstring>(uint8_t blink_count=5) noexcept</argsstring>
        <name>output_section_indicator</name>
        <param>
          <type>uint8_t</type>
          <declname>blink_count</declname>
          <defval>5</defval>
        </param>
        <briefdescription>
<para>Blink GPIO14 to indicate section start/end. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/TLE92466ED_TestFramework.hpp" line="78" column="13" bodyfile="examples/esp32/main/TLE92466ED_TestFramework.hpp" bodystart="78" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="TLE92466ED__TestFramework_8hpp_1a5c86314094f10701c597cf07a95a4bae" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cleanup_test_progress_indicator</definition>
        <argsstring>() noexcept</argsstring>
        <name>cleanup_test_progress_indicator</name>
        <briefdescription>
<para>Cleanup GPIO14 indicator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/TLE92466ED_TestFramework.hpp" line="96" column="13" bodyfile="examples/esp32/main/TLE92466ED_TestFramework.hpp" bodystart="96" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="TLE92466ED__TestFramework_8hpp_1a57a48f91a141d98e45f82937581e1a97" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ensure_gpio14_initialized</definition>
        <argsstring>() noexcept</argsstring>
        <name>ensure_gpio14_initialized</name>
        <briefdescription>
<para>Ensure GPIO14 is initialized. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/TLE92466ED_TestFramework.hpp" line="108" column="13" bodyfile="examples/esp32/main/TLE92466ED_TestFramework.hpp" bodystart="108" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="TLE92466ED__TestFramework_8hpp_1ae0c6ad85cd439fc16572fe4b495e5479" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void test_task_trampoline</definition>
        <argsstring>(void *param)</argsstring>
        <name>test_task_trampoline</name>
        <param>
          <type>void *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>FreeRTOS task trampoline for test execution. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/TLE92466ED_TestFramework.hpp" line="205" column="13" bodyfile="examples/esp32/main/TLE92466ED_TestFramework.hpp" bodystart="205" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="TLE92466ED__TestFramework_8hpp_1aae72eb91e8194f94255a11e08192ac11" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void print_test_section_status</definition>
        <argsstring>(const char *tag, const char *module_name)</argsstring>
        <name>print_test_section_status</name>
        <param>
          <type>const char *</type>
          <declname>tag</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>module_name</declname>
        </param>
        <briefdescription>
<para>Print section configuration status. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/TLE92466ED_TestFramework.hpp" line="304" column="13" bodyfile="examples/esp32/main/TLE92466ED_TestFramework.hpp" bodystart="304" bodyend="313"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Testing framework for <ref refid="namespaceTLE92466ED" kindref="compound">TLE92466ED</ref> driver examples on ESP32-C6. </para>
    </briefdescription>
    <detaileddescription>
<para>This file provides testing infrastructure including:<itemizedlist>
<listitem><para>Test result tracking</para>
</listitem><listitem><para>Execution timing <linebreak/>
</para>
</listitem><listitem><para>FreeRTOS task-based test execution</para>
</listitem><listitem><para>GPIO14 progress indicator</para>
</listitem><listitem><para>Standardized test execution macros</para>
</listitem></itemizedlist>
</para>
<para>Adapted from HardFOC Internal Interface Wrap test framework</para>
<para><simplesect kind="author"><para>N3b3x </para>
</simplesect>
<simplesect kind="date"><para>2025-10-21 </para>
</simplesect>
<simplesect kind="version"><para>2.0.0 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esp_log.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esp_timer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;freertos/FreeRTOS.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;freertos/task.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;freertos/semphr.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;driver/gpio.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GPIO14<sp/>TEST<sp/>PROGRESSION<sp/>INDICATOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="TLE92466ED__TestFramework_8hpp_1a0897f1535fcbb73063a032f07550b12e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>gpio_num_t<sp/><ref refid="TLE92466ED__TestFramework_8hpp_1a0897f1535fcbb73063a032f07550b12e" kindref="member">TEST_PROGRESS_PIN</ref><sp/>=<sp/>GPIO_NUM_14;</highlight></codeline>
<codeline lineno="33" refid="TLE92466ED__TestFramework_8hpp_1ae2244c7a6c3cf5cc171264032838bed1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="TLE92466ED__TestFramework_8hpp_1ae2244c7a6c3cf5cc171264032838bed1" kindref="member">g_gpio14_initialized</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34" refid="TLE92466ED__TestFramework_8hpp_1a0f5de63264bd9a08624fa9d89b4248a2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="TLE92466ED__TestFramework_8hpp_1a0f5de63264bd9a08624fa9d89b4248a2" kindref="member">g_gpio14_state</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="TLE92466ED__TestFramework_8hpp_1a3967179ac699a5b02ef9787b549409fe" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="TLE92466ED__TestFramework_8hpp_1a3967179ac699a5b02ef9787b549409fe" kindref="member">init_test_progress_indicator</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="TLE92466ED__TestFramework_8hpp_1ae2244c7a6c3cf5cc171264032838bed1" kindref="member">g_gpio14_initialized</ref>)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_config_t<sp/>io_conf<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>io_conf.pin_bit_mask<sp/>=<sp/>(1ULL<sp/>&lt;&lt;<sp/><ref refid="TLE92466ED__TestFramework_8hpp_1a0897f1535fcbb73063a032f07550b12e" kindref="member">TEST_PROGRESS_PIN</ref>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>io_conf.mode<sp/>=<sp/>GPIO_MODE_OUTPUT;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>io_conf.pull_up_en<sp/>=<sp/>GPIO_PULLUP_DISABLE;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>io_conf.pull_down_en<sp/>=<sp/>GPIO_PULLDOWN_ENABLE;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>io_conf.intr_type<sp/>=<sp/>GPIO_INTR_DISABLE;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gpio_config(&amp;io_conf)<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_set_level(<ref refid="TLE92466ED__TestFramework_8hpp_1a0897f1535fcbb73063a032f07550b12e" kindref="member">TEST_PROGRESS_PIN</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TLE92466ED__TestFramework_8hpp_1a0f5de63264bd9a08624fa9d89b4248a2" kindref="member">g_gpio14_state</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TLE92466ED__TestFramework_8hpp_1ae2244c7a6c3cf5cc171264032838bed1" kindref="member">g_gpio14_initialized</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="TLE92466ED__TestFramework_8hpp_1a7bb80345e5681c19686df292fa897daf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TLE92466ED__TestFramework_8hpp_1a7bb80345e5681c19686df292fa897daf" kindref="member">flip_test_progress_indicator</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="TLE92466ED__TestFramework_8hpp_1ae2244c7a6c3cf5cc171264032838bed1" kindref="member">g_gpio14_initialized</ref>)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TLE92466ED__TestFramework_8hpp_1a0f5de63264bd9a08624fa9d89b4248a2" kindref="member">g_gpio14_state</ref><sp/>=<sp/>!<ref refid="TLE92466ED__TestFramework_8hpp_1a0f5de63264bd9a08624fa9d89b4248a2" kindref="member">g_gpio14_state</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_set_level(<ref refid="TLE92466ED__TestFramework_8hpp_1a0897f1535fcbb73063a032f07550b12e" kindref="member">TEST_PROGRESS_PIN</ref>,<sp/><ref refid="TLE92466ED__TestFramework_8hpp_1a0f5de63264bd9a08624fa9d89b4248a2" kindref="member">g_gpio14_state</ref><sp/>?<sp/>1<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(50));</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="TLE92466ED__TestFramework_8hpp_1a0b263a245b65a247ab95a28992b8cc4c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TLE92466ED__TestFramework_8hpp_1a0b263a245b65a247ab95a28992b8cc4c" kindref="member">output_section_indicator</ref>(uint8_t<sp/>blink_count<sp/>=<sp/>5)<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="TLE92466ED__TestFramework_8hpp_1ae2244c7a6c3cf5cc171264032838bed1" kindref="member">g_gpio14_initialized</ref>)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>blink_count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpio_set_level(<ref refid="TLE92466ED__TestFramework_8hpp_1a0897f1535fcbb73063a032f07550b12e" kindref="member">TEST_PROGRESS_PIN</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(50));</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpio_set_level(<ref refid="TLE92466ED__TestFramework_8hpp_1a0897f1535fcbb73063a032f07550b12e" kindref="member">TEST_PROGRESS_PIN</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(50));</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TLE92466ED__TestFramework_8hpp_1a0f5de63264bd9a08624fa9d89b4248a2" kindref="member">g_gpio14_state</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="TLE92466ED__TestFramework_8hpp_1a5c86314094f10701c597cf07a95a4bae" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TLE92466ED__TestFramework_8hpp_1a5c86314094f10701c597cf07a95a4bae" kindref="member">cleanup_test_progress_indicator</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="TLE92466ED__TestFramework_8hpp_1ae2244c7a6c3cf5cc171264032838bed1" kindref="member">g_gpio14_initialized</ref>)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpio_set_level(<ref refid="TLE92466ED__TestFramework_8hpp_1a0897f1535fcbb73063a032f07550b12e" kindref="member">TEST_PROGRESS_PIN</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpio_reset_pin(<ref refid="TLE92466ED__TestFramework_8hpp_1a0897f1535fcbb73063a032f07550b12e" kindref="member">TEST_PROGRESS_PIN</ref>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TLE92466ED__TestFramework_8hpp_1ae2244c7a6c3cf5cc171264032838bed1" kindref="member">g_gpio14_initialized</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TLE92466ED__TestFramework_8hpp_1a0f5de63264bd9a08624fa9d89b4248a2" kindref="member">g_gpio14_state</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="TLE92466ED__TestFramework_8hpp_1a57a48f91a141d98e45f82937581e1a97" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TLE92466ED__TestFramework_8hpp_1a57a48f91a141d98e45f82937581e1a97" kindref="member">ensure_gpio14_initialized</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="TLE92466ED__TestFramework_8hpp_1ae2244c7a6c3cf5cc171264032838bed1" kindref="member">g_gpio14_initialized</ref>)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TLE92466ED__TestFramework_8hpp_1a3967179ac699a5b02ef9787b549409fe" kindref="member">init_test_progress_indicator</ref>();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TEST<sp/>RESULT<sp/>TRACKING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="structTestResults" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structTestResults" kindref="compound">TestResults</ref><sp/>{</highlight></codeline>
<codeline lineno="122" refid="structTestResults_1afe20b168a13950ffca7296c0c56d4359" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structTestResults_1afe20b168a13950ffca7296c0c56d4359" kindref="member">total_tests</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="123" refid="structTestResults_1a55b5f813fe7b5863b46e03f2c7f761ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structTestResults_1a55b5f813fe7b5863b46e03f2c7f761ea" kindref="member">passed_tests</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="124" refid="structTestResults_1a0acef46f38f27f0fbb8fa822bb218b3a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structTestResults_1a0acef46f38f27f0fbb8fa822bb218b3a" kindref="member">failed_tests</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="125" refid="structTestResults_1a7eddc258a4288ac5f0a36a1008c9d014" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="structTestResults_1a7eddc258a4288ac5f0a36a1008c9d014" kindref="member">total_execution_time_us</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="127" refid="structTestResults_1a257eba3a9005a5c19c68ae27774948f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structTestResults_1a257eba3a9005a5c19c68ae27774948f7" kindref="member">add_result</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>passed,<sp/>uint64_t<sp/>execution_time)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTestResults_1afe20b168a13950ffca7296c0c56d4359" kindref="member">total_tests</ref>++;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTestResults_1a7eddc258a4288ac5f0a36a1008c9d014" kindref="member">total_execution_time_us</ref><sp/>+=<sp/>execution_time;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(passed)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTestResults_1a55b5f813fe7b5863b46e03f2c7f761ea" kindref="member">passed_tests</ref>++;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTestResults_1a0acef46f38f27f0fbb8fa822bb218b3a" kindref="member">failed_tests</ref>++;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137" refid="structTestResults_1abd312f39dea9e43056ca161f315c7569" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structTestResults_1abd312f39dea9e43056ca161f315c7569" kindref="member">get_success_percentage</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structTestResults_1afe20b168a13950ffca7296c0c56d4359" kindref="member">total_tests</ref><sp/>&gt;<sp/>0<sp/>?<sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="structTestResults_1a55b5f813fe7b5863b46e03f2c7f761ea" kindref="member">passed_tests</ref>)<sp/>/<sp/><ref refid="structTestResults_1afe20b168a13950ffca7296c0c56d4359" kindref="member">total_tests</ref><sp/>*<sp/>100.0)<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="141" refid="structTestResults_1a7466f28f6ee19443a8c8510588c7844e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structTestResults_1a7466f28f6ee19443a8c8510588c7844e" kindref="member">get_total_time_ms</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structTestResults_1a7eddc258a4288ac5f0a36a1008c9d014" kindref="member">total_execution_time_us</ref><sp/>/<sp/>1000.0;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="145" refid="structTestResults_1a630453426a26294b000f09ecc9063329" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structTestResults_1a630453426a26294b000f09ecc9063329" kindref="member">print_summary</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>tag)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(tag,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(tag,<sp/></highlight><highlight class="stringliteral">&quot;╔══════════════════════════════════════════════════════════════════════════════╗&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(tag,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TEST<sp/>RESULTS<sp/>SUMMARY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(tag,<sp/></highlight><highlight class="stringliteral">&quot;╠══════════════════════════════════════════════════════════════════════════════╣&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(tag,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/>Total<sp/>Tests:<sp/><sp/><sp/><sp/><sp/><sp/>%-56d<sp/><sp/>║&quot;</highlight><highlight class="normal">,<sp/><ref refid="structTestResults_1afe20b168a13950ffca7296c0c56d4359" kindref="member">total_tests</ref>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(tag,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/>Passed:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%-56d<sp/><sp/>║&quot;</highlight><highlight class="normal">,<sp/><ref refid="structTestResults_1a55b5f813fe7b5863b46e03f2c7f761ea" kindref="member">passed_tests</ref>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(tag,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/>Failed:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%-56d<sp/><sp/>║&quot;</highlight><highlight class="normal">,<sp/><ref refid="structTestResults_1a0acef46f38f27f0fbb8fa822bb218b3a" kindref="member">failed_tests</ref>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(tag,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/>Success<sp/>Rate:<sp/><sp/><sp/><sp/><sp/>%-55.2f%%<sp/><sp/>║&quot;</highlight><highlight class="normal">,<sp/><ref refid="structTestResults_1abd312f39dea9e43056ca161f315c7569" kindref="member">get_success_percentage</ref>());</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(tag,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/>Total<sp/>Time:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>%-52.2f<sp/>ms<sp/><sp/>║&quot;</highlight><highlight class="normal">,<sp/><ref refid="structTestResults_1a7466f28f6ee19443a8c8510588c7844e" kindref="member">get_total_time_ms</ref>());</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(tag,<sp/></highlight><highlight class="stringliteral">&quot;╚══════════════════════════════════════════════════════════════════════════════╝&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(tag,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal">};</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Global<sp/>test<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="TLE92466ED__TestFramework_8hpp_1aaff89257c54366921eebb8ec1348b1fd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structTestResults" kindref="compound">TestResults</ref><sp/><ref refid="TLE92466ED__TestFramework_8hpp_1aaff89257c54366921eebb8ec1348b1fd" kindref="member">g_test_results</ref>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TEST<sp/>EXECUTION<sp/>MACROS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="TLE92466ED__TestFramework_8hpp_1a36936b10eceab520bb9d3d95534a00db" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RUN_TEST(test_func)<sp/>\</highlight></codeline>
<codeline lineno="171"><highlight class="preprocessor">do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ensure_gpio14_initialized();<sp/>\</highlight></codeline>
<codeline lineno="173"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ESP_LOGI(TAG,<sp/>&quot;&quot;);<sp/>\</highlight></codeline>
<codeline lineno="174"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ESP_LOGI(TAG,<sp/>&quot;╔══════════════════════════════════════════════════════════════════════════════╗&quot;);<sp/>\</highlight></codeline>
<codeline lineno="175"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ESP_LOGI(TAG,<sp/>&quot;║<sp/>Running:<sp/>&quot;<sp/>#test_func<sp/>&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;);<sp/>\</highlight></codeline>
<codeline lineno="176"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ESP_LOGI(TAG,<sp/>&quot;╚══════════════════════════════════════════════════════════════════════════════╝&quot;);<sp/>\</highlight></codeline>
<codeline lineno="177"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>uint64_t<sp/>start_time<sp/>=<sp/>esp_timer_get_time();<sp/>\</highlight></codeline>
<codeline lineno="178"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>bool<sp/>result<sp/>=<sp/>test_func();<sp/>\</highlight></codeline>
<codeline lineno="179"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>uint64_t<sp/>end_time<sp/>=<sp/>esp_timer_get_time();<sp/>\</highlight></codeline>
<codeline lineno="180"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>uint64_t<sp/>execution_time<sp/>=<sp/>end_time<sp/>-<sp/>start_time;<sp/>\</highlight></codeline>
<codeline lineno="181"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>g_test_results.add_result(result,<sp/>execution_time);<sp/>\</highlight></codeline>
<codeline lineno="182"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(result)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="183"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(TAG,<sp/>&quot;[SUCCESS]<sp/>PASSED:<sp/>&quot;<sp/>#test_func<sp/>&quot;<sp/>(%.2f<sp/>ms)&quot;,<sp/>execution_time<sp/>/<sp/>1000.0);<sp/>\</highlight></codeline>
<codeline lineno="184"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="185"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(TAG,<sp/>&quot;[FAILED]<sp/>FAILED:<sp/>&quot;<sp/>#test_func<sp/>&quot;<sp/>(%.2f<sp/>ms)&quot;,<sp/>execution_time<sp/>/<sp/>1000.0);<sp/>\</highlight></codeline>
<codeline lineno="186"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="187"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>flip_test_progress_indicator();<sp/>\</highlight></codeline>
<codeline lineno="188"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(100));<sp/>\</highlight></codeline>
<codeline lineno="189"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="structTestTaskContext" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structTestTaskContext" kindref="compound">TestTaskContext</ref><sp/>{</highlight></codeline>
<codeline lineno="195" refid="structTestTaskContext_1abcf19d2762ab98990c3fdc1eacf86130" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="structTestTaskContext_1abcf19d2762ab98990c3fdc1eacf86130" kindref="member">test_name</ref>;</highlight></codeline>
<codeline lineno="196" refid="structTestTaskContext_1aa72faa223fd0ff992772b12458f62ec8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>bool<sp/>(*<ref refid="structTestTaskContext_1aa72faa223fd0ff992772b12458f62ec8" kindref="member">test_func</ref>)()<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197" refid="structTestTaskContext_1a1c97680bd267a35637278ea10a3fae0e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTestResults" kindref="compound">TestResults</ref>*<sp/><ref refid="structTestTaskContext_1a1c97680bd267a35637278ea10a3fae0e" kindref="member">results</ref>;</highlight></codeline>
<codeline lineno="198" refid="structTestTaskContext_1ae51f49c33ea802bc7f8bdde560a27304" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="structTestTaskContext_1ae51f49c33ea802bc7f8bdde560a27304" kindref="member">tag</ref>;</highlight></codeline>
<codeline lineno="199" refid="structTestTaskContext_1ab82bee11b198be2f2b4d6c908573ddb6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>SemaphoreHandle_t<sp/><ref refid="structTestTaskContext_1ab82bee11b198be2f2b4d6c908573ddb6" kindref="member">completion_semaphore</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal">};</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="TLE92466ED__TestFramework_8hpp_1ae0c6ad85cd439fc16572fe4b495e5479" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TLE92466ED__TestFramework_8hpp_1ae0c6ad85cd439fc16572fe4b495e5479" kindref="member">test_task_trampoline</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>param)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTestTaskContext" kindref="compound">TestTaskContext</ref>*<sp/>ctx<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="structTestTaskContext" kindref="compound">TestTaskContext</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(param);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(ctx-&gt;<ref refid="structTestTaskContext_1ae51f49c33ea802bc7f8bdde560a27304" kindref="member">tag</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(ctx-&gt;<ref refid="structTestTaskContext_1ae51f49c33ea802bc7f8bdde560a27304" kindref="member">tag</ref>,<sp/></highlight><highlight class="stringliteral">&quot;╔══════════════════════════════════════════════════════════════════════════════╗&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(ctx-&gt;<ref refid="structTestTaskContext_1ae51f49c33ea802bc7f8bdde560a27304" kindref="member">tag</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/>Running<sp/>(task):<sp/>%-62s║&quot;</highlight><highlight class="normal">,<sp/>ctx-&gt;<ref refid="structTestTaskContext_1abcf19d2762ab98990c3fdc1eacf86130" kindref="member">test_name</ref>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(ctx-&gt;<ref refid="structTestTaskContext_1ae51f49c33ea802bc7f8bdde560a27304" kindref="member">tag</ref>,<sp/></highlight><highlight class="stringliteral">&quot;╚══════════════════════════════════════════════════════════════════════════════╝&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>start_time<sp/>=<sp/>esp_timer_get_time();</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>ctx-&gt;<ref refid="structTestTaskContext_1aa72faa223fd0ff992772b12458f62ec8" kindref="member">test_func</ref>();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>end_time<sp/>=<sp/>esp_timer_get_time();</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>execution_time<sp/>=<sp/>end_time<sp/>-<sp/>start_time;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx-&gt;<ref refid="structTestTaskContext_1a1c97680bd267a35637278ea10a3fae0e" kindref="member">results</ref>-&gt;<ref refid="structTestResults_1a257eba3a9005a5c19c68ae27774948f7" kindref="member">add_result</ref>(result,<sp/>execution_time);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(ctx-&gt;<ref refid="structTestTaskContext_1ae51f49c33ea802bc7f8bdde560a27304" kindref="member">tag</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>PASSED<sp/>(task):<sp/>%s<sp/>(%.2f<sp/>ms)&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx-&gt;<ref refid="structTestTaskContext_1abcf19d2762ab98990c3fdc1eacf86130" kindref="member">test_name</ref>,<sp/>execution_time<sp/>/<sp/>1000.0);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(ctx-&gt;<ref refid="structTestTaskContext_1ae51f49c33ea802bc7f8bdde560a27304" kindref="member">tag</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[FAILED]<sp/>FAILED<sp/>(task):<sp/>%s<sp/>(%.2f<sp/>ms)&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx-&gt;<ref refid="structTestTaskContext_1abcf19d2762ab98990c3fdc1eacf86130" kindref="member">test_name</ref>,<sp/>execution_time<sp/>/<sp/>1000.0);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>xSemaphoreGive(ctx-&gt;<ref refid="structTestTaskContext_1ab82bee11b198be2f2b4d6c908573ddb6" kindref="member">completion_semaphore</ref>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelete(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="TLE92466ED__TestFramework_8hpp_1a214e38e25939e45e31ae73a073fca47f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RUN_TEST_IN_TASK(name,<sp/>func,<sp/>stack_size_bytes,<sp/>priority)<sp/>\</highlight></codeline>
<codeline lineno="235"><highlight class="preprocessor">do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="236"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ensure_gpio14_initialized();<sp/>\</highlight></codeline>
<codeline lineno="237"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>TestTaskContext<sp/>ctx;<sp/>\</highlight></codeline>
<codeline lineno="238"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ctx.test_name<sp/>=<sp/>name;<sp/>\</highlight></codeline>
<codeline lineno="239"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ctx.test_func<sp/>=<sp/>func;<sp/>\</highlight></codeline>
<codeline lineno="240"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ctx.results<sp/>=<sp/>&amp;g_test_results;<sp/>\</highlight></codeline>
<codeline lineno="241"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ctx.tag<sp/>=<sp/>TAG;<sp/>\</highlight></codeline>
<codeline lineno="242"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ctx.completion_semaphore<sp/>=<sp/>xSemaphoreCreateBinary();<sp/>\</highlight></codeline>
<codeline lineno="243"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(ctx.completion_semaphore<sp/>==<sp/>nullptr)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="244"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(TAG,<sp/>&quot;Failed<sp/>to<sp/>create<sp/>semaphore<sp/>for<sp/>test:<sp/>%s&quot;,<sp/>name);<sp/>\</highlight></codeline>
<codeline lineno="245"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RUN_TEST(func);<sp/>\</highlight></codeline>
<codeline lineno="246"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="247"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseType_t<sp/>created<sp/>=<sp/>xTaskCreate(test_task_trampoline,<sp/>name,<sp/>\</highlight></codeline>
<codeline lineno="248"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(stack_size_bytes)<sp/>/<sp/>sizeof(StackType_t),<sp/>\</highlight></codeline>
<codeline lineno="249"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;ctx,<sp/>(priority),<sp/>nullptr);<sp/>\</highlight></codeline>
<codeline lineno="250"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(created<sp/>!=<sp/>pdPASS)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="251"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(TAG,<sp/>&quot;Failed<sp/>to<sp/>create<sp/>test<sp/>task:<sp/>%s&quot;,<sp/>name);<sp/>\</highlight></codeline>
<codeline lineno="252"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vSemaphoreDelete(ctx.completion_semaphore);<sp/>\</highlight></codeline>
<codeline lineno="253"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RUN_TEST(func);<sp/>\</highlight></codeline>
<codeline lineno="254"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="255"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(xSemaphoreTake(ctx.completion_semaphore,<sp/>pdMS_TO_TICKS(30000))<sp/>==<sp/>pdTRUE)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="256"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(TAG,<sp/>&quot;Test<sp/>task<sp/>completed:<sp/>%s&quot;,<sp/>name);<sp/>\</highlight></codeline>
<codeline lineno="257"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="258"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGW(TAG,<sp/>&quot;Test<sp/>task<sp/>timeout:<sp/>%s&quot;,<sp/>name);<sp/>\</highlight></codeline>
<codeline lineno="259"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="260"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vSemaphoreDelete(ctx.completion_semaphore);<sp/>\</highlight></codeline>
<codeline lineno="261"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flip_test_progress_indicator();<sp/>\</highlight></codeline>
<codeline lineno="262"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(100));<sp/>\</highlight></codeline>
<codeline lineno="263"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="264"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="265"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="270" refid="TLE92466ED__TestFramework_8hpp_1a474e37ca2ab214a02b4a2718aa8b4e5b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RUN_TEST_SECTION_IF_ENABLED(enabled,<sp/>section_name,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="271"><highlight class="preprocessor">do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="272"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(enabled)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="273"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(TAG,<sp/>&quot;&quot;);<sp/>\</highlight></codeline>
<codeline lineno="274"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(TAG,<sp/>&quot;╔══════════════════════════════════════════════════════════════════════════════╗&quot;);<sp/>\</highlight></codeline>
<codeline lineno="275"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(TAG,<sp/>&quot;║<sp/>SECTION:<sp/>%-69s║&quot;,<sp/>section_name);<sp/>\</highlight></codeline>
<codeline lineno="276"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(TAG,<sp/>&quot;╚══════════════════════════════════════════════════════════════════════════════╝&quot;);<sp/>\</highlight></codeline>
<codeline lineno="277"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_section_indicator(5);<sp/>\</highlight></codeline>
<codeline lineno="278"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__VA_ARGS__<sp/>\</highlight></codeline>
<codeline lineno="279"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="280"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="TLE92466ED__TestFramework_8hpp_1a67d0268939c5e2304d0d649bb1fc6d0b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RUN_TEST_SECTION_IF_ENABLED_WITH_PATTERN(enabled,<sp/>section_name,<sp/>blink_count,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="286"><highlight class="preprocessor">do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="287"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(enabled)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="288"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(TAG,<sp/>&quot;&quot;);<sp/>\</highlight></codeline>
<codeline lineno="289"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(TAG,<sp/>&quot;╔══════════════════════════════════════════════════════════════════════════════╗&quot;);<sp/>\</highlight></codeline>
<codeline lineno="290"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(TAG,<sp/>&quot;║<sp/>SECTION:<sp/>%-69s║&quot;,<sp/>section_name);<sp/>\</highlight></codeline>
<codeline lineno="291"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(TAG,<sp/>&quot;╚══════════════════════════════════════════════════════════════════════════════╝&quot;);<sp/>\</highlight></codeline>
<codeline lineno="292"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_section_indicator(blink_count);<sp/>\</highlight></codeline>
<codeline lineno="293"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__VA_ARGS__<sp/>\</highlight></codeline>
<codeline lineno="294"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="295"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TEST<sp/>REPORTING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="304" refid="TLE92466ED__TestFramework_8hpp_1aae72eb91e8194f94255a11e08192ac11" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TLE92466ED__TestFramework_8hpp_1aae72eb91e8194f94255a11e08192ac11" kindref="member">print_test_section_status</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>tag,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>module_name)<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(tag,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(tag,<sp/></highlight><highlight class="stringliteral">&quot;╔══════════════════════════════════════════════════════════════════════════════╗&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(tag,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/>%s<sp/>TEST<sp/>CONFIGURATION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>module_name);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(tag,<sp/></highlight><highlight class="stringliteral">&quot;╠══════════════════════════════════════════════════════════════════════════════╣&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(tag,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/>Test<sp/>sections<sp/>will<sp/>execute<sp/>based<sp/>on<sp/>compile-time<sp/>configuration<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(tag,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/>GPIO14<sp/>test<sp/>progression<sp/>indicator:<sp/>ENABLED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(tag,<sp/></highlight><highlight class="stringliteral">&quot;╚══════════════════════════════════════════════════════════════════════════════╝&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(tag,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="examples/esp32/main/TLE92466ED_TestFramework.hpp"/>
  </compounddef>
</doxygen>
