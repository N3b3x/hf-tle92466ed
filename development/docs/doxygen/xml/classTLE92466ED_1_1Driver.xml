<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="classTLE92466ED_1_1Driver" kind="class" language="C++" prot="public">
    <compoundname>TLE92466ED::Driver</compoundname>
    <includes refid="TLE92466ED_8hpp" local="no">TLE92466ED.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classTLE92466ED_1_1Driver_1ab16d17d1c59d94a2915a874124d60d2a" prot="private" static="no" mutable="no">
        <type><ref refid="classTLE92466ED_1_1HAL" kindref="compound">HAL</ref> &amp;</type>
        <definition>HAL&amp; TLE92466ED::Driver::hal_</definition>
        <argsstring></argsstring>
        <name>hal_</name>
        <qualifiedname>TLE92466ED::Driver::hal_</qualifiedname>
        <briefdescription>
<para>Hardware abstraction layer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="725" column="9" bodyfile="include/TLE92466ED.hpp" bodystart="725" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classTLE92466ED_1_1Driver_1acb0604487319d6d57e1fe206e726251d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool TLE92466ED::Driver::initialized_</definition>
        <argsstring></argsstring>
        <name>initialized_</name>
        <qualifiedname>TLE92466ED::Driver::initialized_</qualifiedname>
        <briefdescription>
<para>Initialization status. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="726" column="10" bodyfile="include/TLE92466ED.hpp" bodystart="726" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classTLE92466ED_1_1Driver_1acb123fbe9e3735f53709f9ff455549fb" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool TLE92466ED::Driver::mission_mode_</definition>
        <argsstring></argsstring>
        <name>mission_mode_</name>
        <qualifiedname>TLE92466ED::Driver::mission_mode_</qualifiedname>
        <briefdescription>
<para>Mission mode flag (vs config mode) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="727" column="10" bodyfile="include/TLE92466ED.hpp" bodystart="727" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classTLE92466ED_1_1Driver_1ae2e4af149a51b43def4a7b3c58fdeb54" prot="private" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t TLE92466ED::Driver::channel_enable_cache_</definition>
        <argsstring></argsstring>
        <name>channel_enable_cache_</name>
        <qualifiedname>TLE92466ED::Driver::channel_enable_cache_</qualifiedname>
        <briefdescription>
<para>Cached channel enable state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="728" column="14" bodyfile="include/TLE92466ED.hpp" bodystart="728" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classTLE92466ED_1_1Driver_1a00f387cb0c9e0874323d268151528687" prot="private" static="no" mutable="no">
        <type>std::array&lt; uint16_t, 6 &gt;</type>
        <definition>std::array&lt;uint16_t, 6&gt; TLE92466ED::Driver::channel_setpoints_</definition>
        <argsstring></argsstring>
        <name>channel_setpoints_</name>
        <qualifiedname>TLE92466ED::Driver::channel_setpoints_</qualifiedname>
        <briefdescription>
<para>Cached current setpoints. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="729" column="16" bodyfile="include/TLE92466ED.hpp" bodystart="729" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1a4bbb14e00b6ddbe34178a10a1f1437b3" prot="public" static="no" const="no" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>TLE92466ED::Driver::Driver</definition>
        <argsstring>(HAL &amp;hal) noexcept</argsstring>
        <name>Driver</name>
        <qualifiedname>TLE92466ED::Driver::Driver</qualifiedname>
        <param>
          <type><ref refid="classTLE92466ED_1_1HAL" kindref="compound">HAL</ref> &amp;</type>
          <declname>hal</declname>
        </param>
        <briefdescription>
<para>Construct driver with <ref refid="classTLE92466ED_1_1HAL" kindref="compound">HAL</ref> interface. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hal</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to hardware abstraction layer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><ref refid="classTLE92466ED_1_1HAL" kindref="compound">HAL</ref> must remain valid for the lifetime of the <ref refid="classTLE92466ED_1_1Driver" kindref="compound">Driver</ref> </para>
</simplesect>
<simplesect kind="post"><para><ref refid="classTLE92466ED_1_1Driver" kindref="compound">Driver</ref> is constructed but not initialized </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="241" column="14" bodyfile="include/TLE92466ED.hpp" bodystart="241" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1ad0b945af44819683a04575c01918fb58" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>TLE92466ED::Driver::~Driver</definition>
        <argsstring>() noexcept</argsstring>
        <name>~Driver</name>
        <qualifiedname>TLE92466ED::Driver::~Driver</qualifiedname>
        <briefdescription>
<para>Destructor - ensures clean shutdown. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="246" column="5" bodyfile="include/TLE92466ED.hpp" bodystart="246" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1a502a02a806fb26a0f95b9981a938c373" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TLE92466ED::Driver::Driver</definition>
        <argsstring>(const Driver &amp;)=delete</argsstring>
        <name>Driver</name>
        <qualifiedname>TLE92466ED::Driver::Driver</qualifiedname>
        <param>
          <type>const <ref refid="classTLE92466ED_1_1Driver" kindref="compound">Driver</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="254" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1afaa3d45304a6a3f06f5818422287f5b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTLE92466ED_1_1Driver" kindref="compound">Driver</ref> &amp;</type>
        <definition>Driver &amp; TLE92466ED::Driver::operator=</definition>
        <argsstring>(const Driver &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>TLE92466ED::Driver::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classTLE92466ED_1_1Driver" kindref="compound">Driver</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="255" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1ad5738c3eaae1a028a522798b2c35aafc" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>TLE92466ED::Driver::Driver</definition>
        <argsstring>(Driver &amp;&amp;) noexcept=delete</argsstring>
        <name>Driver</name>
        <qualifiedname>TLE92466ED::Driver::Driver</qualifiedname>
        <param>
          <type><ref refid="classTLE92466ED_1_1Driver" kindref="compound">Driver</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="258" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1a5363c080f497af5079fe48f6ec484272" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classTLE92466ED_1_1Driver" kindref="compound">Driver</ref> &amp;</type>
        <definition>Driver &amp; TLE92466ED::Driver::operator=</definition>
        <argsstring>(Driver &amp;&amp;) noexcept=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>TLE92466ED::Driver::operator=</qualifiedname>
        <param>
          <type><ref refid="classTLE92466ED_1_1Driver" kindref="compound">Driver</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="259" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1a6812c6ddad257631f76e5535dc0348a4" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult</ref>&lt; void &gt;</type>
        <definition>DriverResult&lt; void &gt; TLE92466ED::Driver::init</definition>
        <argsstring>() noexcept</argsstring>
        <name>init</name>
        <qualifiedname>TLE92466ED::Driver::init</qualifiedname>
        <briefdescription>
<para>Initialize the driver and hardware. </para>
        </briefdescription>
        <detaileddescription>
<para>Performs complete initialization sequence:<orderedlist>
<listitem><para>Initialize <ref refid="classTLE92466ED_1_1HAL" kindref="compound">HAL</ref> (SPI peripheral)</para>
</listitem><listitem><para>Verify device communication</para>
</listitem><listitem><para>Read and verify device ID</para>
</listitem><listitem><para>Apply default configuration (in Config Mode)</para>
</listitem><listitem><para>Clear any power-on faults</para>
</listitem></orderedlist>
</para>
<para>After <ref refid="classTLE92466ED_1_1Driver_1a6812c6ddad257631f76e5535dc0348a4" kindref="member">init()</ref>, device is in Config Mode. Call <ref refid="classTLE92466ED_1_1Driver_1a5d6ac4bc1ac01a52c2a9c22be270dc51" kindref="member">enter_mission_mode()</ref> to enable outputs.</para>
<para><simplesect kind="return"><para>DriverResult&lt;void&gt; Success or error code </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="namespaceTLE92466ED_1a575be450839f70a2517e896131f37ad6a4852946e074a1f48ed7de9a024b10c03" kindref="member">DriverError::HardwareError</ref></parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classTLE92466ED_1_1HAL" kindref="compound">HAL</ref> initialization failed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="namespaceTLE92466ED_1a575be450839f70a2517e896131f37ad6a203bb9823df0c54c271585d4bfb69762" kindref="member">DriverError::DeviceNotResponding</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>No SPI response </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="namespaceTLE92466ED_1a575be450839f70a2517e896131f37ad6a7edfebe0f108ca457da80a3d0b64fdd4" kindref="member">DriverError::WrongDeviceID</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Device ID mismatch </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="283" column="19" bodyfile="src/TLE92466ED.cpp" bodystart="25" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1a5d6ac4bc1ac01a52c2a9c22be270dc51" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult</ref>&lt; void &gt;</type>
        <definition>DriverResult&lt; void &gt; TLE92466ED::Driver::enter_mission_mode</definition>
        <argsstring>() noexcept</argsstring>
        <name>enter_mission_mode</name>
        <qualifiedname>TLE92466ED::Driver::enter_mission_mode</qualifiedname>
        <briefdescription>
<para>Enter Mission Mode (enables channel control) </para>
        </briefdescription>
        <detaileddescription>
<para>Transitions from Config Mode to Mission Mode. Channel outputs can only be enabled in Mission Mode. Most configuration registers can only be written in Config Mode.</para>
<para><simplesect kind="return"><para>DriverResult&lt;void&gt; Success or error </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="namespaceTLE92466ED_1a575be450839f70a2517e896131f37ad6a9646ad3a1c3e708b4fa8b4b4270fbab6" kindref="member">DriverError::NotInitialized</ref></parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classTLE92466ED_1_1Driver" kindref="compound">Driver</ref> not initialized </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="296" column="19" bodyfile="src/TLE92466ED.cpp" bodystart="119" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1a933e029c3f19c9750b45f458915f328e" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult</ref>&lt; void &gt;</type>
        <definition>DriverResult&lt; void &gt; TLE92466ED::Driver::enter_config_mode</definition>
        <argsstring>() noexcept</argsstring>
        <name>enter_config_mode</name>
        <qualifiedname>TLE92466ED::Driver::enter_config_mode</qualifiedname>
        <briefdescription>
<para>Enter Config Mode (allows configuration changes) </para>
        </briefdescription>
        <detaileddescription>
<para>Transitions from Mission Mode to Config Mode. All channel outputs are automatically disabled when entering Config Mode.</para>
<para><simplesect kind="return"><para>DriverResult&lt;void&gt; Success or error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="307" column="19" bodyfile="src/TLE92466ED.cpp" bodystart="135" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1a53d39f2f39da5aa0bc7fcdf5c884fc3e" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool TLE92466ED::Driver::is_mission_mode</definition>
        <argsstring>() const noexcept</argsstring>
        <name>is_mission_mode</name>
        <qualifiedname>TLE92466ED::Driver::is_mission_mode</qualifiedname>
        <briefdescription>
<para>Check if in mission mode. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if in mission mode, false if in config mode </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="313" column="11" bodyfile="include/TLE92466ED.hpp" bodystart="313" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1a7e495e105a1eac168b635d5612df3b91" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult</ref>&lt; void &gt;</type>
        <definition>DriverResult&lt; void &gt; TLE92466ED::Driver::configure_global</definition>
        <argsstring>(const GlobalConfig &amp;config) noexcept</argsstring>
        <name>configure_global</name>
        <qualifiedname>TLE92466ED::Driver::configure_global</qualifiedname>
        <param>
          <type>const <ref refid="structTLE92466ED_1_1GlobalConfig" kindref="compound">GlobalConfig</ref> &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Configure global device settings. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Global configuration structure </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DriverResult&lt;void&gt; Success or error </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="namespaceTLE92466ED_1a575be450839f70a2517e896131f37ad6a9646ad3a1c3e708b4fa8b4b4270fbab6" kindref="member">DriverError::NotInitialized</ref></parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classTLE92466ED_1_1Driver" kindref="compound">Driver</ref> not initialized </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="namespaceTLE92466ED_1a575be450839f70a2517e896131f37ad6add498c17cdbac13335b3810f8265f1a4" kindref="member">DriverError::WrongMode</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Must be in Config Mode </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="329" column="19" bodyfile="src/TLE92466ED.cpp" bodystart="155" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1a8b34ef52de739876265dff6a44e7b252" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult</ref>&lt; void &gt;</type>
        <definition>DriverResult&lt; void &gt; TLE92466ED::Driver::set_crc_enabled</definition>
        <argsstring>(bool enabled) noexcept</argsstring>
        <name>set_crc_enabled</name>
        <qualifiedname>TLE92466ED::Driver::set_crc_enabled</qualifiedname>
        <param>
          <type>bool</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
<para>Enable/disable CRC checking. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>enabled</parametername>
</parameternamelist>
<parameterdescription>
<para>true to enable CRC </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DriverResult&lt;void&gt; Success or error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="337" column="19" bodyfile="src/TLE92466ED.cpp" bodystart="193" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1ae617833fafb03be9302d789cc501eef2" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult</ref>&lt; void &gt;</type>
        <definition>DriverResult&lt; void &gt; TLE92466ED::Driver::set_vbat_thresholds</definition>
        <argsstring>(uint8_t uv_threshold, uint8_t ov_threshold) noexcept</argsstring>
        <name>set_vbat_thresholds</name>
        <qualifiedname>TLE92466ED::Driver::set_vbat_thresholds</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>uv_threshold</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ov_threshold</declname>
        </param>
        <briefdescription>
<para>Configure VBAT under/overvoltage thresholds. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uv_threshold</parametername>
</parameternamelist>
<parameterdescription>
<para>UV threshold (V_BAT_UV = value * 0.16208V) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ov_threshold</parametername>
</parameternamelist>
<parameterdescription>
<para>OV threshold (V_BAT_OV = value * 0.16208V) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DriverResult&lt;void&gt; Success or error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="346" column="19" bodyfile="src/TLE92466ED.cpp" bodystart="203" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1a14901f750a8234e4feedbdd3f1ef0ef0" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult</ref>&lt; void &gt;</type>
        <definition>DriverResult&lt; void &gt; TLE92466ED::Driver::enable_channel</definition>
        <argsstring>(Channel channel, bool enabled) noexcept</argsstring>
        <name>enable_channel</name>
        <qualifiedname>TLE92466ED::Driver::enable_channel</qualifiedname>
        <param>
          <type><ref refid="namespaceTLE92466ED_1a5c10754457d5dff2b773105e94705065" kindref="member">Channel</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
<para>Enable or disable a channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel to control </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enabled</parametername>
</parameternamelist>
<parameterdescription>
<para>true to enable, false to disable </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DriverResult&lt;void&gt; Success or error </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="namespaceTLE92466ED_1a575be450839f70a2517e896131f37ad6add498c17cdbac13335b3810f8265f1a4" kindref="member">DriverError::WrongMode</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Must be in Mission Mode </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="360" column="19" bodyfile="src/TLE92466ED.cpp" bodystart="216" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1a53f4052759edfa3e4d97c02f6227a38f" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult</ref>&lt; void &gt;</type>
        <definition>DriverResult&lt; void &gt; TLE92466ED::Driver::enable_channels</definition>
        <argsstring>(uint8_t channel_mask) noexcept</argsstring>
        <name>enable_channels</name>
        <qualifiedname>TLE92466ED::Driver::enable_channels</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>channel_mask</declname>
        </param>
        <briefdescription>
<para>Enable or disable multiple channels. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Bitmask where bit N enables channel N </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DriverResult&lt;void&gt; Success or error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="368" column="19" bodyfile="src/TLE92466ED.cpp" bodystart="241" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1a62a69d75a299fcce3edef506ac252cc3" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult</ref>&lt; void &gt;</type>
        <definition>DriverResult&lt; void &gt; TLE92466ED::Driver::enable_all_channels</definition>
        <argsstring>() noexcept</argsstring>
        <name>enable_all_channels</name>
        <qualifiedname>TLE92466ED::Driver::enable_all_channels</qualifiedname>
        <briefdescription>
<para>Enable all channels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="373" column="19" bodyfile="src/TLE92466ED.cpp" bodystart="257" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1a2dd973bbe408b7531601d8cbd0ef8ff6" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult</ref>&lt; void &gt;</type>
        <definition>DriverResult&lt; void &gt; TLE92466ED::Driver::disable_all_channels</definition>
        <argsstring>() noexcept</argsstring>
        <name>disable_all_channels</name>
        <qualifiedname>TLE92466ED::Driver::disable_all_channels</qualifiedname>
        <briefdescription>
<para>Disable all channels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="378" column="19" bodyfile="src/TLE92466ED.cpp" bodystart="261" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1ad94ecb8c18e6cc22a03133b31205b3f6" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult</ref>&lt; void &gt;</type>
        <definition>DriverResult&lt; void &gt; TLE92466ED::Driver::set_channel_mode</definition>
        <argsstring>(Channel channel, ChannelMode mode) noexcept</argsstring>
        <name>set_channel_mode</name>
        <qualifiedname>TLE92466ED::Driver::set_channel_mode</qualifiedname>
        <param>
          <type><ref refid="namespaceTLE92466ED_1a5c10754457d5dff2b773105e94705065" kindref="member">Channel</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="namespaceTLE92466ED_1a057b583027ebf8bcb8d65949cd12a7a5" kindref="member">ChannelMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Set channel operation mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel to configure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Operation mode (ICC, Direct Drive, etc.) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DriverResult&lt;void&gt; Success or error </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="namespaceTLE92466ED_1a575be450839f70a2517e896131f37ad6add498c17cdbac13335b3810f8265f1a4" kindref="member">DriverError::WrongMode</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Must be in Config Mode </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="388" column="19" bodyfile="src/TLE92466ED.cpp" bodystart="265" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1ab940f704cd91be2bb185a6882a05afad" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult</ref>&lt; void &gt;</type>
        <definition>DriverResult&lt; void &gt; TLE92466ED::Driver::set_parallel_operation</definition>
        <argsstring>(ParallelPair pair, bool enabled) noexcept</argsstring>
        <name>set_parallel_operation</name>
        <qualifiedname>TLE92466ED::Driver::set_parallel_operation</qualifiedname>
        <param>
          <type><ref refid="namespaceTLE92466ED_1aa1fa8e45dfa0d762330e89dae1ad3de2" kindref="member">ParallelPair</ref></type>
          <declname>pair</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
<para>Configure channel for parallel operation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pair</parametername>
</parameternamelist>
<parameterdescription>
<para>Parallel pair to configure (0/3, 1/2, or 4/5) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enabled</parametername>
</parameternamelist>
<parameterdescription>
<para>true to enable parallel operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DriverResult&lt;void&gt; Success or error </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="namespaceTLE92466ED_1a575be450839f70a2517e896131f37ad6add498c17cdbac13335b3810f8265f1a4" kindref="member">DriverError::WrongMode</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Must be in Config Mode </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="398" column="19" bodyfile="src/TLE92466ED.cpp" bodystart="283" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1ae05d604320745e3f31f0a188344f0e71" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult</ref>&lt; void &gt;</type>
        <definition>DriverResult&lt; void &gt; TLE92466ED::Driver::set_current_setpoint</definition>
        <argsstring>(Channel channel, uint16_t current_ma, bool parallel_mode=false) noexcept</argsstring>
        <name>set_current_setpoint</name>
        <qualifiedname>TLE92466ED::Driver::set_current_setpoint</qualifiedname>
        <param>
          <type><ref refid="namespaceTLE92466ED_1a5c10754457d5dff2b773105e94705065" kindref="member">Channel</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>current_ma</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>parallel_mode</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Set current setpoint for channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel to configure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>current_ma</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired current in milliamperes (0-2000 single, 0-4000 parallel) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parallel_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Set true if channel is in parallel mode </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DriverResult&lt;void&gt; Success or error</para>
</simplesect>
<simplesect kind="note"><para>Current is regulated by the Integrated Current Controller (ICC) </para>
</simplesect>
<simplesect kind="note"><para>Resolution: 15-bit (0.061mA per LSB in single mode)</para>
</simplesect>
<simplesect kind="par"><title>Current Limits (from datasheet):</title><para><itemizedlist>
<listitem><para><bold>Single channel</bold>: 1.5A typical continuous, 2.0A absolute maximum</para>
</listitem><listitem><para><bold>Parallel channels</bold>: 2.7A typical continuous, 4.0A absolute maximum</para>
</listitem></itemizedlist>
</para>
</simplesect>
<simplesect kind="warning"><para>Setting currents above typical continuous ratings may result in thermal limiting, reduced accuracy, or current regulation at the device&apos;s natural limit rather than the requested setpoint. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="423" column="19" bodyfile="src/TLE92466ED.cpp" bodystart="315" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1ad696ae90dd7fa2afe483ab955c5f1336" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult</ref>&lt; uint16_t &gt;</type>
        <definition>DriverResult&lt; uint16_t &gt; TLE92466ED::Driver::get_current_setpoint</definition>
        <argsstring>(Channel channel, bool parallel_mode=false) noexcept</argsstring>
        <name>get_current_setpoint</name>
        <qualifiedname>TLE92466ED::Driver::get_current_setpoint</qualifiedname>
        <param>
          <type><ref refid="namespaceTLE92466ED_1a5c10754457d5dff2b773105e94705065" kindref="member">Channel</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>parallel_mode</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get current setpoint for channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel to query </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parallel_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>true if channel is in parallel mode </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DriverResult&lt;uint16_t&gt; Current in mA or error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="435" column="19" bodyfile="src/TLE92466ED.cpp" bodystart="347" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1a3e2439020c84551e24fdcc65792bbd21" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult</ref>&lt; void &gt;</type>
        <definition>DriverResult&lt; void &gt; TLE92466ED::Driver::configure_pwm_period</definition>
        <argsstring>(Channel channel, uint8_t period_mantissa, uint8_t period_exponent, bool low_freq_range=false) noexcept</argsstring>
        <name>configure_pwm_period</name>
        <qualifiedname>TLE92466ED::Driver::configure_pwm_period</qualifiedname>
        <param>
          <type><ref refid="namespaceTLE92466ED_1a5c10754457d5dff2b773105e94705065" kindref="member">Channel</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>period_mantissa</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>period_exponent</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>low_freq_range</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Configure PWM parameters for ICC. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel to configure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>period_mantissa</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM period mantissa </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>period_exponent</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM period exponent (0-7) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>low_freq_range</parametername>
</parameternamelist>
<parameterdescription>
<para>Enable low frequency range (8x multiplier) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DriverResult&lt;void&gt; Success or error</para>
</simplesect>
PWM period: t_PWM = mantissa * 2^exponent * (1/f_sys) If low_freq_range: t_PWM = mantissa * 8 * 2^exponent * (1/f_sys) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="451" column="19" bodyfile="src/TLE92466ED.cpp" bodystart="373" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1a2cb6dacc7feda300a48123a9ab18b4fc" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult</ref>&lt; void &gt;</type>
        <definition>DriverResult&lt; void &gt; TLE92466ED::Driver::configure_dither</definition>
        <argsstring>(Channel channel, uint16_t step_size, uint8_t num_steps, uint8_t flat_steps) noexcept</argsstring>
        <name>configure_dither</name>
        <qualifiedname>TLE92466ED::Driver::configure_dither</qualifiedname>
        <param>
          <type><ref refid="namespaceTLE92466ED_1a5c10754457d5dff2b773105e94705065" kindref="member">Channel</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>step_size</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>num_steps</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>flat_steps</declname>
        </param>
        <briefdescription>
<para>Configure dither parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel to configure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>step_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Dither amplitude (I_dither = steps * step_size * 2A / 32767) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_steps</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of steps in quarter period </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flat_steps</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of flat clock cycles at top/bottom </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DriverResult&lt;void&gt; Success or error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="466" column="19" bodyfile="src/TLE92466ED.cpp" bodystart="396" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1ad126e0f11adb3e9d221d70bed57bbccb" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult</ref>&lt; void &gt;</type>
        <definition>DriverResult&lt; void &gt; TLE92466ED::Driver::configure_channel</definition>
        <argsstring>(Channel channel, const ChannelConfig &amp;config) noexcept</argsstring>
        <name>configure_channel</name>
        <qualifiedname>TLE92466ED::Driver::configure_channel</qualifiedname>
        <param>
          <type><ref refid="namespaceTLE92466ED_1a5c10754457d5dff2b773105e94705065" kindref="member">Channel</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="structTLE92466ED_1_1ChannelConfig" kindref="compound">ChannelConfig</ref> &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Configure channel slew rate and diagnostics. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel to configure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel configuration </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DriverResult&lt;void&gt; Success or error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="479" column="19" bodyfile="src/TLE92466ED.cpp" bodystart="427" bodyend="511"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1a5f923222620a05acdff0a387407ac26f" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult</ref>&lt; <ref refid="structTLE92466ED_1_1DeviceStatus" kindref="compound">DeviceStatus</ref> &gt;</type>
        <definition>DriverResult&lt; DeviceStatus &gt; TLE92466ED::Driver::get_device_status</definition>
        <argsstring>() noexcept</argsstring>
        <name>get_device_status</name>
        <qualifiedname>TLE92466ED::Driver::get_device_status</qualifiedname>
        <briefdescription>
<para>Get global device status. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>DriverResult&lt;DeviceStatus&gt; Device status or error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="492" column="19" bodyfile="src/TLE92466ED.cpp" bodystart="517" bodyend="573"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1a45a4f6258caf6ec76cf06b6077a36460" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult</ref>&lt; <ref refid="structTLE92466ED_1_1ChannelDiagnostics" kindref="compound">ChannelDiagnostics</ref> &gt;</type>
        <definition>DriverResult&lt; ChannelDiagnostics &gt; TLE92466ED::Driver::get_channel_diagnostics</definition>
        <argsstring>(Channel channel) noexcept</argsstring>
        <name>get_channel_diagnostics</name>
        <qualifiedname>TLE92466ED::Driver::get_channel_diagnostics</qualifiedname>
        <param>
          <type><ref refid="namespaceTLE92466ED_1a5c10754457d5dff2b773105e94705065" kindref="member">Channel</ref></type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Get channel diagnostic information. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel to query </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DriverResult&lt;ChannelDiagnostics&gt; Diagnostics or error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="500" column="19" bodyfile="src/TLE92466ED.cpp" bodystart="575" bodyend="636"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1a1e4f817695678d3ae9c844512b96d040" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult</ref>&lt; uint16_t &gt;</type>
        <definition>DriverResult&lt; uint16_t &gt; TLE92466ED::Driver::get_average_current</definition>
        <argsstring>(Channel channel, bool parallel_mode=false) noexcept</argsstring>
        <name>get_average_current</name>
        <qualifiedname>TLE92466ED::Driver::get_average_current</qualifiedname>
        <param>
          <type><ref refid="namespaceTLE92466ED_1a5c10754457d5dff2b773105e94705065" kindref="member">Channel</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>parallel_mode</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get average current for a channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel to query </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parallel_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>true if in parallel mode </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DriverResult&lt;uint16_t&gt; Average current in mA or error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="509" column="19" bodyfile="src/TLE92466ED.cpp" bodystart="638" bodyend="657"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1a9fd56d1ec673d123eec46723211adf09" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult</ref>&lt; uint16_t &gt;</type>
        <definition>DriverResult&lt; uint16_t &gt; TLE92466ED::Driver::get_duty_cycle</definition>
        <argsstring>(Channel channel) noexcept</argsstring>
        <name>get_duty_cycle</name>
        <qualifiedname>TLE92466ED::Driver::get_duty_cycle</qualifiedname>
        <param>
          <type><ref refid="namespaceTLE92466ED_1a5c10754457d5dff2b773105e94705065" kindref="member">Channel</ref></type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Get PWM duty cycle for a channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel to query </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DriverResult&lt;uint16_t&gt; Duty cycle (raw 16-bit value) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="519" column="19" bodyfile="src/TLE92466ED.cpp" bodystart="659" bodyend="670"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1a98fa552d77741e77809b1359269b01a9" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult</ref>&lt; uint16_t &gt;</type>
        <definition>DriverResult&lt; uint16_t &gt; TLE92466ED::Driver::get_vbat_voltage</definition>
        <argsstring>() noexcept</argsstring>
        <name>get_vbat_voltage</name>
        <qualifiedname>TLE92466ED::Driver::get_vbat_voltage</qualifiedname>
        <briefdescription>
<para>Get VBAT voltage. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>DriverResult&lt;uint16_t&gt; VBAT in millivolts or error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="526" column="19" bodyfile="src/TLE92466ED.cpp" bodystart="672" bodyend="685"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1a22e122617080a86b08a257e59d12c2d6" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult</ref>&lt; uint16_t &gt;</type>
        <definition>DriverResult&lt; uint16_t &gt; TLE92466ED::Driver::get_vio_voltage</definition>
        <argsstring>() noexcept</argsstring>
        <name>get_vio_voltage</name>
        <qualifiedname>TLE92466ED::Driver::get_vio_voltage</qualifiedname>
        <briefdescription>
<para>Get VIO voltage <linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>DriverResult&lt;uint16_t&gt; VIO in millivolts or error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="533" column="19" bodyfile="src/TLE92466ED.cpp" bodystart="687" bodyend="698"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1a6dd36fed098213f081b83429ac36e155" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult</ref>&lt; void &gt;</type>
        <definition>DriverResult&lt; void &gt; TLE92466ED::Driver::clear_faults</definition>
        <argsstring>() noexcept</argsstring>
        <name>clear_faults</name>
        <qualifiedname>TLE92466ED::Driver::clear_faults</qualifiedname>
        <briefdescription>
<para>Clear all fault flags. </para>
        </briefdescription>
        <detaileddescription>
<para>Clears latched fault conditions. Does not clear active faults.</para>
<para><simplesect kind="return"><para>DriverResult&lt;void&gt; Success or error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="547" column="19" bodyfile="src/TLE92466ED.cpp" bodystart="704" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1ab7810de85d17bdc15483fe7e550bf41e" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult</ref>&lt; bool &gt;</type>
        <definition>DriverResult&lt; bool &gt; TLE92466ED::Driver::has_any_fault</definition>
        <argsstring>() noexcept</argsstring>
        <name>has_any_fault</name>
        <qualifiedname>TLE92466ED::Driver::has_any_fault</qualifiedname>
        <briefdescription>
<para>Check if any fault exists. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>DriverResult&lt;bool&gt; true if any fault exists </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="554" column="19" bodyfile="src/TLE92466ED.cpp" bodystart="727" bodyend="734"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1aecf3111ef20905c3c579a3c967bb4225" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult</ref>&lt; void &gt;</type>
        <definition>DriverResult&lt; void &gt; TLE92466ED::Driver::software_reset</definition>
        <argsstring>() noexcept</argsstring>
        <name>software_reset</name>
        <qualifiedname>TLE92466ED::Driver::software_reset</qualifiedname>
        <briefdescription>
<para>Software reset of the device. </para>
        </briefdescription>
        <detaileddescription>
<para>Resets all registers to default values. <ref refid="classTLE92466ED_1_1Driver_1a6812c6ddad257631f76e5535dc0348a4" kindref="member">init()</ref> must be called again.</para>
<para><simplesect kind="return"><para>DriverResult&lt;void&gt; Success or error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="564" column="19" bodyfile="src/TLE92466ED.cpp" bodystart="736" bodyend="749"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1a54dff731678d5e7d646f1b71aec0e4b4" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult</ref>&lt; void &gt;</type>
        <definition>DriverResult&lt; void &gt; TLE92466ED::Driver::reload_spi_watchdog</definition>
        <argsstring>(uint16_t reload_value) noexcept</argsstring>
        <name>reload_spi_watchdog</name>
        <qualifiedname>TLE92466ED::Driver::reload_spi_watchdog</qualifiedname>
        <param>
          <type>uint16_t</type>
          <declname>reload_value</declname>
        </param>
        <briefdescription>
<para>Reload SPI watchdog counter. </para>
        </briefdescription>
        <detaileddescription>
<para>Must be called periodically when SPI watchdog is enabled to prevent watchdog timeout.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reload_value</parametername>
</parameternamelist>
<parameterdescription>
<para>Reload value (watchdog period) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DriverResult&lt;void&gt; Success or error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="580" column="19" bodyfile="src/TLE92466ED.cpp" bodystart="755" bodyend="761"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1a509c70079dabd676a16d364f648765ad" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult</ref>&lt; uint16_t &gt;</type>
        <definition>DriverResult&lt; uint16_t &gt; TLE92466ED::Driver::get_ic_version</definition>
        <argsstring>() noexcept</argsstring>
        <name>get_ic_version</name>
        <qualifiedname>TLE92466ED::Driver::get_ic_version</qualifiedname>
        <briefdescription>
<para>Read IC version and ID. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>DriverResult&lt;uint16_t&gt; ICVID register value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="591" column="19" bodyfile="src/TLE92466ED.cpp" bodystart="767" bodyend="773"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1a342fe5af74ea4a9e03f46c6ca3ef30ba" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult</ref>&lt; std::array&lt; uint16_t, 3 &gt; &gt;</type>
        <definition>DriverResult&lt; std::array&lt; uint16_t, 3 &gt; &gt; TLE92466ED::Driver::get_chip_id</definition>
        <argsstring>() noexcept</argsstring>
        <name>get_chip_id</name>
        <qualifiedname>TLE92466ED::Driver::get_chip_id</qualifiedname>
        <briefdescription>
<para>Read unique chip ID. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult&lt;std::array&lt;uint16_t, 3&gt;&gt;</ref> Three 16-bit ID registers </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="598" column="19" bodyfile="src/TLE92466ED.cpp" bodystart="775" bodyend="801"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1a52fed085cd65033e051c0a2569299160" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult</ref>&lt; bool &gt;</type>
        <definition>DriverResult&lt; bool &gt; TLE92466ED::Driver::verify_device</definition>
        <argsstring>() noexcept</argsstring>
        <name>verify_device</name>
        <qualifiedname>TLE92466ED::Driver::verify_device</qualifiedname>
        <briefdescription>
<para>Verify device ID matches expected value. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>DriverResult&lt;bool&gt; true if ID matches </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="605" column="19" bodyfile="src/TLE92466ED.cpp" bodystart="803" bodyend="820"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1a0ee1ce0891a58b814c85003e52d93980" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool TLE92466ED::Driver::is_initialized</definition>
        <argsstring>() const noexcept</argsstring>
        <name>is_initialized</name>
        <qualifiedname>TLE92466ED::Driver::is_initialized</qualifiedname>
        <briefdescription>
<para>Check if driver is initialized. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if initialized and ready </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="612" column="11" bodyfile="include/TLE92466ED.hpp" bodystart="612" bodyend="614"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1af88748dc8bfb5ce8e0c4f8101e21025c" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult</ref>&lt; uint16_t &gt;</type>
        <definition>DriverResult&lt; uint16_t &gt; TLE92466ED::Driver::read_register</definition>
        <argsstring>(uint16_t address, bool verify_crc=true) noexcept</argsstring>
        <name>read_register</name>
        <qualifiedname>TLE92466ED::Driver::read_register</qualifiedname>
        <param>
          <type>uint16_t</type>
          <declname>address</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>verify_crc</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Read 16-bit register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>address</parametername>
</parameternamelist>
<parameterdescription>
<para>Register address (10-bit) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verify_crc</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, verify CRC in response </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DriverResult&lt;uint16_t&gt; Register value or error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="627" column="19" bodyfile="src/TLE92466ED.cpp" bodystart="826" bodyend="846"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1afa93ae5dd0c0c0ef390b3e00c0baf963" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult</ref>&lt; void &gt;</type>
        <definition>DriverResult&lt; void &gt; TLE92466ED::Driver::write_register</definition>
        <argsstring>(uint16_t address, uint16_t value, bool verify_crc=true) noexcept</argsstring>
        <name>write_register</name>
        <qualifiedname>TLE92466ED::Driver::write_register</qualifiedname>
        <param>
          <type>uint16_t</type>
          <declname>address</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>value</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>verify_crc</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Write 16-bit register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>address</parametername>
</parameternamelist>
<parameterdescription>
<para>Register address (10-bit) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to write (16-bit) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verify_crc</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, verify CRC in response </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DriverResult&lt;void&gt; Success or error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="639" column="19" bodyfile="src/TLE92466ED.cpp" bodystart="848" bodyend="866"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1a4c5416e3177089f62fbd462c8f0a5cd6" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult</ref>&lt; void &gt;</type>
        <definition>DriverResult&lt; void &gt; TLE92466ED::Driver::modify_register</definition>
        <argsstring>(uint16_t address, uint16_t mask, uint16_t value) noexcept</argsstring>
        <name>modify_register</name>
        <qualifiedname>TLE92466ED::Driver::modify_register</qualifiedname>
        <param>
          <type>uint16_t</type>
          <declname>address</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Modify register bits. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>address</parametername>
</parameternamelist>
<parameterdescription>
<para>Register address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Bit mask for modification </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>New bit values </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DriverResult&lt;void&gt; Success or error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="652" column="19" bodyfile="src/TLE92466ED.cpp" bodystart="868" bodyend="884"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1a134604705e2da64cf42cb66ecf4c9c5e" prot="private" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult</ref>&lt; <ref refid="unionTLE92466ED_1_1SPIFrame" kindref="compound">SPIFrame</ref> &gt;</type>
        <definition>DriverResult&lt; SPIFrame &gt; TLE92466ED::Driver::transfer_frame</definition>
        <argsstring>(const SPIFrame &amp;tx_frame, bool verify_crc=true) noexcept</argsstring>
        <name>transfer_frame</name>
        <qualifiedname>TLE92466ED::Driver::transfer_frame</qualifiedname>
        <param>
          <type>const <ref refid="unionTLE92466ED_1_1SPIFrame" kindref="compound">SPIFrame</ref> &amp;</type>
          <declname>tx_frame</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>verify_crc</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Transfer SPI frame with CRC calculation and verification. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="665" column="19" bodyfile="src/TLE92466ED.cpp" bodystart="890" bodyend="924"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1adb669e39a82b1f895787eb554f1c400b" prot="private" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool TLE92466ED::Driver::is_valid_channel_internal</definition>
        <argsstring>(Channel channel) const noexcept</argsstring>
        <name>is_valid_channel_internal</name>
        <qualifiedname>TLE92466ED::Driver::is_valid_channel_internal</qualifiedname>
        <param>
          <type><ref refid="namespaceTLE92466ED_1a5c10754457d5dff2b773105e94705065" kindref="member">Channel</ref></type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Validate channel number. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="670" column="21" bodyfile="include/TLE92466ED.hpp" bodystart="670" bodyend="672"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1aae490abce5f136e7a475a102eafce95b" prot="private" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult</ref>&lt; void &gt;</type>
        <definition>DriverResult&lt; void &gt; TLE92466ED::Driver::check_initialized</definition>
        <argsstring>() const noexcept</argsstring>
        <name>check_initialized</name>
        <qualifiedname>TLE92466ED::Driver::check_initialized</qualifiedname>
        <briefdescription>
<para>Check if driver is initialized. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="677" column="19" bodyfile="include/TLE92466ED.hpp" bodystart="677" bodyend="682"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1ab76438152acbbec8c8fbc72b0a3f52b2" prot="private" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult</ref>&lt; void &gt;</type>
        <definition>DriverResult&lt; void &gt; TLE92466ED::Driver::check_mission_mode</definition>
        <argsstring>() const noexcept</argsstring>
        <name>check_mission_mode</name>
        <qualifiedname>TLE92466ED::Driver::check_mission_mode</qualifiedname>
        <briefdescription>
<para>Check if in mission mode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="687" column="19" bodyfile="include/TLE92466ED.hpp" bodystart="687" bodyend="692"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1a354840dade594f90213b3f996fd9e838" prot="private" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult</ref>&lt; void &gt;</type>
        <definition>DriverResult&lt; void &gt; TLE92466ED::Driver::check_config_mode</definition>
        <argsstring>() const noexcept</argsstring>
        <name>check_config_mode</name>
        <qualifiedname>TLE92466ED::Driver::check_config_mode</qualifiedname>
        <briefdescription>
<para>Check if in config mode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="697" column="19" bodyfile="include/TLE92466ED.hpp" bodystart="697" bodyend="702"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1a9bd210c1fad1057e97e8ecd9eb38314f" prot="private" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult</ref>&lt; void &gt;</type>
        <definition>DriverResult&lt; void &gt; TLE92466ED::Driver::apply_default_config</definition>
        <argsstring>() noexcept</argsstring>
        <name>apply_default_config</name>
        <qualifiedname>TLE92466ED::Driver::apply_default_config</qualifiedname>
        <briefdescription>
<para>Apply default configuration after initialization. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="707" column="19" bodyfile="src/TLE92466ED.cpp" bodystart="66" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1a70e208f183cbb65ea3704617f6740f37" prot="private" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult</ref>&lt; void &gt;</type>
        <definition>DriverResult&lt; void &gt; TLE92466ED::Driver::check_spi_status</definition>
        <argsstring>(const SPIFrame &amp;rx_frame) noexcept</argsstring>
        <name>check_spi_status</name>
        <qualifiedname>TLE92466ED::Driver::check_spi_status</qualifiedname>
        <param>
          <type>const <ref refid="unionTLE92466ED_1_1SPIFrame" kindref="compound">SPIFrame</ref> &amp;</type>
          <declname>rx_frame</declname>
        </param>
        <briefdescription>
<para>Parse SPI status from reply frame. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="712" column="19" bodyfile="src/TLE92466ED.cpp" bodystart="926" bodyend="943"/>
      </memberdef>
      <memberdef kind="function" id="classTLE92466ED_1_1Driver_1ac039d4d1a62b9e997dcaec6e920e5e44" prot="private" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceTLE92466ED_1a44dcb5fb1232b7a60ee5995bd22bc49d" kindref="member">DriverResult</ref>&lt; bool &gt;</type>
        <definition>DriverResult&lt; bool &gt; TLE92466ED::Driver::is_channel_parallel</definition>
        <argsstring>(Channel channel) noexcept</argsstring>
        <name>is_channel_parallel</name>
        <qualifiedname>TLE92466ED::Driver::is_channel_parallel</qualifiedname>
        <param>
          <type><ref refid="namespaceTLE92466ED_1a5c10754457d5dff2b773105e94705065" kindref="member">Channel</ref></type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Check if channel is currently in parallel mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DriverResult&lt;bool&gt; true if channel is paralleled, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TLE92466ED.hpp" line="719" column="19" bodyfile="src/TLE92466ED.cpp" bodystart="945" bodyend="977"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Main <ref refid="namespaceTLE92466ED" kindref="compound">TLE92466ED</ref> driver class. </para>
    </briefdescription>
    <detaileddescription>
<para>This is the primary driver class that provides complete control over the <ref refid="namespaceTLE92466ED" kindref="compound">TLE92466ED</ref> IC. It manages SPI communication (32-bit with CRC), configuration, current control, monitoring, and diagnostics for all six output channels.</para>
<para><bold>Thread Safety:</bold> This class is NOT thread-safe by default. External synchronization is required for multi-threaded access.</para>
<para><bold>Resource Management:</bold> Uses RAII principles - <ref refid="classTLE92466ED_1_1Driver_1a6812c6ddad257631f76e5535dc0348a4" kindref="member">init()</ref> must be called explicitly but cleanup is automatic.</para>
<para><bold>Error Handling:</bold> Uses std::expected for robust error handling without exceptions.</para>
<para><simplesect kind="par"><title>Initialization Sequence:</title><para><orderedlist>
<listitem><para>Construct driver with <ref refid="classTLE92466ED_1_1HAL" kindref="compound">HAL</ref> reference</para>
</listitem><listitem><para>Call <ref refid="classTLE92466ED_1_1Driver_1a6812c6ddad257631f76e5535dc0348a4" kindref="member">init()</ref> to initialize hardware and verify device</para>
</listitem><listitem><para>Call <ref refid="classTLE92466ED_1_1Driver_1a5d6ac4bc1ac01a52c2a9c22be270dc51" kindref="member">enter_mission_mode()</ref> to enable channel control</para>
</listitem><listitem><para>Configure channels with <ref refid="classTLE92466ED_1_1Driver_1ad94ecb8c18e6cc22a03133b31205b3f6" kindref="member">set_channel_mode()</ref> and <ref refid="classTLE92466ED_1_1Driver_1ad126e0f11adb3e9d221d70bed57bbccb" kindref="member">configure_channel()</ref></para>
</listitem><listitem><para>Set current with <ref refid="classTLE92466ED_1_1Driver_1ae05d604320745e3f31f0a188344f0e71" kindref="member">set_current_setpoint()</ref></para>
</listitem><listitem><para>Enable outputs with <ref refid="classTLE92466ED_1_1Driver_1a14901f750a8234e4feedbdd3f1ef0ef0" kindref="member">enable_channel()</ref></para>
</listitem><listitem><para>Monitor with get diagnostics functions </para>
</listitem></orderedlist>
</para>
</simplesect>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>TLE92466ED::Driver</label>
        <link refid="classTLE92466ED_1_1Driver"/>
        <childnode refid="2" relation="usage">
          <edgelabel>hal_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>TLE92466ED::HAL</label>
        <link refid="classTLE92466ED_1_1HAL"/>
      </node>
    </collaborationgraph>
    <location file="include/TLE92466ED.hpp" line="231" column="1" bodyfile="include/TLE92466ED.hpp" bodystart="231" bodyend="730"/>
    <listofallmembers>
      <member refid="classTLE92466ED_1_1Driver_1a9bd210c1fad1057e97e8ecd9eb38314f" prot="private" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>apply_default_config</name></member>
      <member refid="classTLE92466ED_1_1Driver_1ae2e4af149a51b43def4a7b3c58fdeb54" prot="private" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>channel_enable_cache_</name></member>
      <member refid="classTLE92466ED_1_1Driver_1a00f387cb0c9e0874323d268151528687" prot="private" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>channel_setpoints_</name></member>
      <member refid="classTLE92466ED_1_1Driver_1a354840dade594f90213b3f996fd9e838" prot="private" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>check_config_mode</name></member>
      <member refid="classTLE92466ED_1_1Driver_1aae490abce5f136e7a475a102eafce95b" prot="private" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>check_initialized</name></member>
      <member refid="classTLE92466ED_1_1Driver_1ab76438152acbbec8c8fbc72b0a3f52b2" prot="private" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>check_mission_mode</name></member>
      <member refid="classTLE92466ED_1_1Driver_1a70e208f183cbb65ea3704617f6740f37" prot="private" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>check_spi_status</name></member>
      <member refid="classTLE92466ED_1_1Driver_1a6dd36fed098213f081b83429ac36e155" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>clear_faults</name></member>
      <member refid="classTLE92466ED_1_1Driver_1ad126e0f11adb3e9d221d70bed57bbccb" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>configure_channel</name></member>
      <member refid="classTLE92466ED_1_1Driver_1a2cb6dacc7feda300a48123a9ab18b4fc" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>configure_dither</name></member>
      <member refid="classTLE92466ED_1_1Driver_1a7e495e105a1eac168b635d5612df3b91" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>configure_global</name></member>
      <member refid="classTLE92466ED_1_1Driver_1a3e2439020c84551e24fdcc65792bbd21" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>configure_pwm_period</name></member>
      <member refid="classTLE92466ED_1_1Driver_1a2dd973bbe408b7531601d8cbd0ef8ff6" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>disable_all_channels</name></member>
      <member refid="classTLE92466ED_1_1Driver_1a4bbb14e00b6ddbe34178a10a1f1437b3" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>Driver</name></member>
      <member refid="classTLE92466ED_1_1Driver_1a502a02a806fb26a0f95b9981a938c373" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>Driver</name></member>
      <member refid="classTLE92466ED_1_1Driver_1ad5738c3eaae1a028a522798b2c35aafc" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>Driver</name></member>
      <member refid="classTLE92466ED_1_1Driver_1a62a69d75a299fcce3edef506ac252cc3" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>enable_all_channels</name></member>
      <member refid="classTLE92466ED_1_1Driver_1a14901f750a8234e4feedbdd3f1ef0ef0" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>enable_channel</name></member>
      <member refid="classTLE92466ED_1_1Driver_1a53f4052759edfa3e4d97c02f6227a38f" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>enable_channels</name></member>
      <member refid="classTLE92466ED_1_1Driver_1a933e029c3f19c9750b45f458915f328e" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>enter_config_mode</name></member>
      <member refid="classTLE92466ED_1_1Driver_1a5d6ac4bc1ac01a52c2a9c22be270dc51" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>enter_mission_mode</name></member>
      <member refid="classTLE92466ED_1_1Driver_1a1e4f817695678d3ae9c844512b96d040" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>get_average_current</name></member>
      <member refid="classTLE92466ED_1_1Driver_1a45a4f6258caf6ec76cf06b6077a36460" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>get_channel_diagnostics</name></member>
      <member refid="classTLE92466ED_1_1Driver_1a342fe5af74ea4a9e03f46c6ca3ef30ba" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>get_chip_id</name></member>
      <member refid="classTLE92466ED_1_1Driver_1ad696ae90dd7fa2afe483ab955c5f1336" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>get_current_setpoint</name></member>
      <member refid="classTLE92466ED_1_1Driver_1a5f923222620a05acdff0a387407ac26f" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>get_device_status</name></member>
      <member refid="classTLE92466ED_1_1Driver_1a9fd56d1ec673d123eec46723211adf09" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>get_duty_cycle</name></member>
      <member refid="classTLE92466ED_1_1Driver_1a509c70079dabd676a16d364f648765ad" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>get_ic_version</name></member>
      <member refid="classTLE92466ED_1_1Driver_1a98fa552d77741e77809b1359269b01a9" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>get_vbat_voltage</name></member>
      <member refid="classTLE92466ED_1_1Driver_1a22e122617080a86b08a257e59d12c2d6" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>get_vio_voltage</name></member>
      <member refid="classTLE92466ED_1_1Driver_1ab16d17d1c59d94a2915a874124d60d2a" prot="private" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>hal_</name></member>
      <member refid="classTLE92466ED_1_1Driver_1ab7810de85d17bdc15483fe7e550bf41e" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>has_any_fault</name></member>
      <member refid="classTLE92466ED_1_1Driver_1a6812c6ddad257631f76e5535dc0348a4" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>init</name></member>
      <member refid="classTLE92466ED_1_1Driver_1acb0604487319d6d57e1fe206e726251d" prot="private" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>initialized_</name></member>
      <member refid="classTLE92466ED_1_1Driver_1ac039d4d1a62b9e997dcaec6e920e5e44" prot="private" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>is_channel_parallel</name></member>
      <member refid="classTLE92466ED_1_1Driver_1a0ee1ce0891a58b814c85003e52d93980" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>is_initialized</name></member>
      <member refid="classTLE92466ED_1_1Driver_1a53d39f2f39da5aa0bc7fcdf5c884fc3e" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>is_mission_mode</name></member>
      <member refid="classTLE92466ED_1_1Driver_1adb669e39a82b1f895787eb554f1c400b" prot="private" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>is_valid_channel_internal</name></member>
      <member refid="classTLE92466ED_1_1Driver_1acb123fbe9e3735f53709f9ff455549fb" prot="private" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>mission_mode_</name></member>
      <member refid="classTLE92466ED_1_1Driver_1a4c5416e3177089f62fbd462c8f0a5cd6" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>modify_register</name></member>
      <member refid="classTLE92466ED_1_1Driver_1afaa3d45304a6a3f06f5818422287f5b2" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>operator=</name></member>
      <member refid="classTLE92466ED_1_1Driver_1a5363c080f497af5079fe48f6ec484272" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>operator=</name></member>
      <member refid="classTLE92466ED_1_1Driver_1af88748dc8bfb5ce8e0c4f8101e21025c" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>read_register</name></member>
      <member refid="classTLE92466ED_1_1Driver_1a54dff731678d5e7d646f1b71aec0e4b4" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>reload_spi_watchdog</name></member>
      <member refid="classTLE92466ED_1_1Driver_1ad94ecb8c18e6cc22a03133b31205b3f6" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>set_channel_mode</name></member>
      <member refid="classTLE92466ED_1_1Driver_1a8b34ef52de739876265dff6a44e7b252" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>set_crc_enabled</name></member>
      <member refid="classTLE92466ED_1_1Driver_1ae05d604320745e3f31f0a188344f0e71" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>set_current_setpoint</name></member>
      <member refid="classTLE92466ED_1_1Driver_1ab940f704cd91be2bb185a6882a05afad" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>set_parallel_operation</name></member>
      <member refid="classTLE92466ED_1_1Driver_1ae617833fafb03be9302d789cc501eef2" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>set_vbat_thresholds</name></member>
      <member refid="classTLE92466ED_1_1Driver_1aecf3111ef20905c3c579a3c967bb4225" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>software_reset</name></member>
      <member refid="classTLE92466ED_1_1Driver_1a134604705e2da64cf42cb66ecf4c9c5e" prot="private" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>transfer_frame</name></member>
      <member refid="classTLE92466ED_1_1Driver_1a52fed085cd65033e051c0a2569299160" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>verify_device</name></member>
      <member refid="classTLE92466ED_1_1Driver_1afa93ae5dd0c0c0ef390b3e00c0baf963" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>write_register</name></member>
      <member refid="classTLE92466ED_1_1Driver_1ad0b945af44819683a04575c01918fb58" prot="public" virt="non-virtual"><scope>TLE92466ED::Driver</scope><name>~Driver</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
